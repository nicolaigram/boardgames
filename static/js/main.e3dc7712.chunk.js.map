{"version":3,"sources":["serviceWorker.ts","components/DiceIcon/index.tsx","pages/KingOfNewYork/index.tsx","pages/Home/index.tsx","pages/StarRealms/PlayersPrompt.tsx","pages/StarRealms/index.tsx","pages/Munchkin/index.tsx","pages/CodenamesDuet/util/cards.ts","pages/CodenamesDuet/util/colors.tsx","pages/CodenamesDuet/index.tsx","pages/CodenamesDuet/KeyCard/util/keys.ts","pages/CodenamesDuet/KeyCard/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","DiceIcon","name","amount","rule","url","RuleContainer","Array","fill","map","_","index","src","alt","style","marginRight","height","width","styled","div","KingOfNewYork","Background","Overlay","Flex","Home","StyledPage","to","process","PlayersPrompt","display","setPlayerCount","StyledPrompt","onClick","StarRealms","useState","startHp","players","setPlayers","showDialog","setShowDialog","sound","Audio","setHp","playerIndex","play","copy","newHp","hp","marginBottom","PlayersContainer","player","Player","HealthBar","percentage","paddingTop","count","newPlayers","i","push","props","Munchkin","colors","changePlayerStat","stat","value","editingName","level","strength","gender","Page","color","placeholder","className","onChange","e","target","CardState","words","green_gradient","CodenamesDuet","card","word","state","default","cards","setCards","turn","setTurn","toggleCardState","temp","currentState","guessedNorth","guessedSouth","bystanderNorth","bystanderSouth","bystanderBoth","getNextCardState","KeyState","keys","ASSASSIN","BYSTANDER","SPY","KeyCard","setKeys","gameId","setGameId","onSubmit","preventDefault","chars","from","modifier","forEach","c","isNaN","String","number","Number","newModifier","charCodeAt","newGameId","getKeys","type","key","ReactDOM","render","StrictMode","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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CTJ,EAASG,UACTH,EAASG,UACTH,EAASI,IAGTJ,EAASI,IACTJ,EAASI,IACTJ,EAASI,IACTJ,EAASI,IACTJ,EAASG,UAGTH,EAASG,UACTH,EAASG,UACTH,EAASG,UACTH,EAASE,SACTF,EAASG,UAGTH,EAASG,UACTH,EAASG,UACTH,EAASG,UACTH,EAASI,IACTJ,EAASG,UAGTH,EAASI,IACTJ,EAASI,IACTJ,EAASI,IACTJ,EAASG,UACTH,EAASE,UAEX,KAAM,CAEJF,EAASG,UACTH,EAASI,IACTJ,EAASG,UACTH,EAASG,UACTH,EAASI,IAGTJ,EAASG,UACTH,EAASE,SACTF,EAASI,IACTJ,EAASI,IACTJ,EAASG,UAGTH,EAASG,UACTH,EAASI,IACTJ,EAASG,UACTH,EAASG,UACTH,EAASE,SAGTF,EAASI,IACTJ,EAASI,IACTJ,EAASI,IACTJ,EAASG,UACTH,EAASG,UAGTH,EAASG,UACTH,EAASG,UACTH,EAASI,IACTJ,EAASE,SACTF,EAASG,WAEX,KAAM,CAEJH,EAASG,UACTH,EAASG,UACTH,EAASG,UACTH,EAASI,IACTJ,EAASI,IAGTJ,EAASE,SACTF,EAASI,IACTJ,EAASG,UACTH,EAASG,UACTH,EAASE,SAGTF,EAASI,IACTJ,EAASG,UACTH,EAASI,IACTJ,EAASI,IACTJ,EAASG,UAGTH,EAASG,UACTH,EAASG,UACTH,EAASE,SACTF,EAASG,UACTH,EAASG,UAGTH,EAASG,UACTH,EAASI,IACTJ,EAASI,IACTJ,EAASG,UACTH,EAASI,KAEX,KAAM,CAEJJ,EAASI,IACTJ,EAASG,UACTH,EAASI,IACTJ,EAASI,IACTJ,EAASG,UAGTH,EAASI,IACTJ,EAASE,SACTF,EAASG,UACTH,EAASG,UACTH,EAASI,IAGTJ,EAASI,IACTJ,EAASG,UACTH,EAASG,UACTH,EAASI,IACTJ,EAASE,SAGTF,EAASE,SACTF,EAASI,IACTJ,EAASG,UACTH,EAASG,UACTH,EAASI,IAGTJ,EAASG,UACTH,EAASG,UACTH,EAASG,UACTH,EAASG,UACTH,EAASG,Y,oxBCxNE,SAASE,KAAW,IAAD,EACRpE,mBAAqB,IADb,mBACzBgE,EADyB,KACnBK,EADmB,OAEJrE,mBAAS,IAFL,mBAEzBsE,EAFyB,KAEjBC,EAFiB,KAUhC,OACE,kBAAC,GAAD,KACE,0BAAMC,SATa,SAAChC,GACtBA,EAAEiC,iBACF,IAAMT,EDuNa,SAACM,GACtB,IAAMI,EAAQrG,MAAMsG,KAAKL,GACrBf,EAAO,GACPqB,EAAW,GACfF,EAAMG,SAAQ,SAACC,GACRC,MAAMD,GAGTF,EAAWE,EAFXvB,GAAQyB,OAAOF,MAMnB,IAAIG,EAAUC,OAAO3B,GAAQ,EAAK,EAC9B4B,EAAcP,EAASQ,WAAW,GAAK,IAAM,EAAI,IAAM,IACrDC,EAAYL,OAAOC,GAAUE,EACnC,OAAOnB,EAAKqB,GCtOGC,CAAQhB,GAChBN,IACLK,EAAQL,GACRO,EAAU,OAKN,2BACEgB,KAAK,OACLvH,KAAK,SACLqE,YAAY,UACZP,MAAOwC,EACP/B,SAAU,SAACC,GAAD,OAAO+B,EAAU/B,EAAEC,OAAOX,UAEtC,2BAAOyD,KAAK,SAASzD,MAAM,YAE7B,yBAAKQ,UAAU,QACZ0B,EAAKzF,KAAI,SAACiH,GAAD,OACR,yBAAKlD,UAAW,OAASkD,SAOnC,IAAMjG,GAAaP,IAAOC,IAAV,IHpCI,UGuEE2D,GC3DtB6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMnG,sCACX,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOmG,KAAMnG,8BACX,kBAACoD,EAAD,OAEF,kBAAC,IAAD,CAAO+C,KAAMnG,wBACX,kBAACiC,EAAD,OAEF,kBAAC,IAAD,CAAOkE,KAAMnG,2BACX,kBAACM,EAAD,OAEF,kBAAC,IAAD,CAAO6F,KAAMnG,gCACX,kBAACP,EAAD,OAEF,kBAAC,IAAD,CAAO0G,KAAMnG,gBACX,kBAACH,EAAD,UAKRuG,SAASC,eAAe,SZsGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e3dc7712.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nexport default function DiceIcon({\n  name,\n  amount,\n  rule,\n}: {\n  name: string;\n  amount: number;\n  rule: string;\n}) {\n  const url = \"/boardgames/dice/\" + name;\n  const size = 50;\n  return (\n    <RuleContainer>\n      {Array(amount)\n        .fill(0)\n        .map((_: any, index: any) => (\n          <img\n            src={url}\n            alt={name}\n            style={{ marginRight: \"10px\" }}\n            height={size}\n            width={size}\n          />\n        ))}\n      <p>{rule}</p>\n    </RuleContainer>\n  );\n}\n\nconst RuleContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport DiceIcon from \"../../components/DiceIcon\";\nimport styled from \"@emotion/styled\";\n\nexport default function KingOfNewYork() {\n  return (\n    <Background>\n      <Overlay>\n        <Flex>\n          <DiceIcon name=\"01_heart.png\" amount={1} rule=\"Heal x\" />\n          <DiceIcon name=\"01_heart.png\" amount={3} rule=\"Take power-up card\" />\n        </Flex>\n        <DiceIcon\n          name=\"02_destroy.png\"\n          amount={1}\n          rule=\"Damage x to buildings or units\"\n        />\n        <DiceIcon name=\"03_energy.png\" amount={1} rule=\"Take x energy\" />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={1}\n          rule=\"Units in your borough you damage you\"\n        />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={2}\n          rule=\"+ other monsters in your borough\"\n        />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={3}\n          rule=\"All units damage all monsters + take the Statue of Liberty\"\n        />\n        <Flex>\n          <DiceIcon name=\"05_claw.png\" amount={1} rule=\"Do x damage\" />\n          <DiceIcon\n            name=\"05_claw.png\"\n            amount={4}\n            rule=\"Berserk (if using expansion)\"\n          />\n        </Flex>\n\n        <Flex>\n          <DiceIcon name=\"06_star.png\" amount={1} rule=\"Nothing*\" />\n          <DiceIcon name=\"06_star.png\" amount={3} rule=\"Take Superstar card\" />\n        </Flex>\n\n        <div>\n          <p>*If you have the Superstar card; x victory points</p>\n        </div>\n      </Overlay>\n    </Background>\n  );\n}\n\nconst Background = styled.div`\n  height: 100vh;\n  width: 100vw;\n  overflow: auto;\n\n  &::before {\n    background-image: url(\"/boardgames/bg.png\");\n    background-position: center;\n    background-size: cover;\n    width: 100%;\n    height: 100%;\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    filter: brightness(50%);\n  }\n`;\n\nconst Overlay = styled.div`\n  padding: 25px;\n  background: rgba(255, 255, 255, 0.8);\n  margin: 0 50px;\n  margin-top: 50px;\n  border-radius: 20px;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  div {\n    margin-right: 10px;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <StyledPage>\n      <Link to={process.env.PUBLIC_URL + \"/king-of-new-york\"}>\n        King of New York\n      </Link>\n      <Link to={process.env.PUBLIC_URL + \"/star-realms\"}>Star Realms</Link>\n      <Link to={process.env.PUBLIC_URL + \"/munchkin\"}>Munchkin</Link>\n      <Link to={process.env.PUBLIC_URL + \"/codenames-duet\"}>\n        Codenames Duet\n      </Link>\n      <Link to={process.env.PUBLIC_URL + \"/codenames-duet/keycard\"}>\n        Codenames Duet - KeyCard\n      </Link>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding-top: 100px;\n  min-height: 100vh;\n  a {\n    --link-color: rgb(255, 255, 255);\n    --link-color-hover: rgb(150, 150, 150);\n    --link-border-color: #333;\n    --link-text-color: black;\n    padding: 12px;\n    border-radius: 8px;\n    font-size: 32px;\n    background-color: var(--link-color);\n    border: 1px solid var(--link-border-color);\n    color: var(--link-text-color);\n    text-decoration: none;\n    margin-bottom: 16px;\n    &:hover {\n      background-color: var(--link-color-hover);\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport default function PlayersPrompt({ display, setPlayerCount }: any) {\n  if (!display) return null;\n  return (\n    <StyledPrompt>\n      <p>How many players?</p>\n      <div>\n        <button onClick={() => setPlayerCount(2)}>2</button>\n        <button onClick={() => setPlayerCount(3)}>3</button>\n        <button onClick={() => setPlayerCount(4)}>4</button>\n      </div>\n    </StyledPrompt>\n  );\n}\n\nconst StyledPrompt = styled.div`\n  position: fixed;\n  background: rgba(255, 255, 255, 0.9);\n  height: 90vh;\n  width: 80vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-size: 30px;\n  button {\n    height: 80px;\n    width: 100px;\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { create } from \"domain\";\nimport React, { useState } from \"react\";\nimport { start } from \"repl\";\nimport LaserShot from \"./LaserShot\";\nimport PlayersPrompt from \"./PlayersPrompt\";\n\ninterface Player {\n  hp: number;\n}\n\nexport default function StarRealms() {\n  const [startHp, setStartHp] = useState(50);\n  const createPlayer = (): Player => ({ hp: startHp });\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [showDialog, setShowDialog] = useState(\"player-count\");\n\n  const setPlayerCount = (count: number) => {\n    const newPlayers = [];\n    for (let i = 0; i < count; i++) {\n      newPlayers.push(createPlayer());\n    }\n    setPlayers(newPlayers);\n    setShowDialog(\"\");\n  };\n\n  const sound = new Audio(\"/boardgames/star-realms/laser_shot.mp3\");\n\n  const setHp = (playerIndex: number, amount: number) => {\n    if (amount < 0) {\n      sound.play();\n    }\n    const copy = [...players];\n    const currentHp = copy[playerIndex].hp;\n    let newHp = currentHp + amount;\n    if (newHp < 0) newHp = 0;\n    copy[playerIndex].hp = newHp;\n    setPlayers(copy);\n  };\n\n  const resetGame = () => {\n    setPlayers([]);\n    setShowDialog(\"player-count\");\n  };\n\n  return (\n    <StyledPage>\n      {showDialog !== \"player-count\" && (\n        <button onClick={resetGame} style={{ marginBottom: \"20px\" }}>\n          Reset game\n        </button>\n      )}\n      <PlayersContainer>\n        {players.map((player, index) => (\n          <Player>\n            <HealthBar percentage={(player.hp / startHp) * 100}>\n              <span>{player.hp}</span>\n            </HealthBar>\n            {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <p>{\"Player \" + (index + 1)}</p>\n            </div> */}\n            <div style={{ paddingTop: \"16px\" }}>\n              <button onClick={() => setHp(index, -5)}>-5</button>\n              <button onClick={() => setHp(index, -1)}>-1</button>\n              <button onClick={() => setHp(index, 1)}>+1</button>\n              <button onClick={() => setHp(index, 5)}>+5</button>\n            </div>\n          </Player>\n        ))}\n      </PlayersContainer>\n      <PlayersPrompt\n        display={showDialog === \"player-count\"}\n        setPlayerCount={setPlayerCount}\n      />\n    </StyledPage>\n  );\n}\n\nfunction getPlayerColor(percentage: number) {\n  if (percentage <= 0) return \"#333\";\n  if (percentage <= 25) return \"#B81D13\";\n  if (percentage <= 50) return \"#EFB700\";\n  return \"#008450\";\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  min-height: 100vh;\n  background: url(\"/boardgames/star-realms/star-wars-backgrounds-14.jpg\");\n  animation: 10s bg alternate infinite;\n  background-position: center;\n  @keyframes bg {\n    0% {\n      background-size: 100%;\n    }\n    100% {\n      background-size: 120%;\n    }\n  }\n`;\n\nconst PlayersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Player = styled.div`\n  border: 1px solid black;\n  overflow: hidden;\n  padding: 16px;\n  font-size: 30px;\n  background-color: #eee;\n  margin-bottom: 20px;\n  opacity: 0.9;\n  border-radius: 20px;\n  border: 10px solid #333;\n  p {\n    margin: 0 0 10px;\n  }\n  button {\n    height: 80px;\n    width: 100px;\n    font-size: 24px;\n    border: 0;\n    background-color: #ccc;\n    &:not(:last-of-type) {\n      margin-right: 10px;\n    }\n  }\n`;\n\nconst HealthBar: any = styled.div`\n  height: 60px;\n  width: calc(100% + 32px);\n  background: black;\n  margin-left: -16px;\n  margin-top: -16px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    position: absolute;\n    color: white;\n  }\n  &::after {\n    content: \"\";\n    background: ${(props: any) => getPlayerColor(props.percentage)};\n    display: block;\n    height: 100%;\n    width: ${(props: any) => props.percentage + \"%\"};\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { env } from \"process\";\nimport React, { useState } from \"react\";\n\ninterface Player {\n  name: string;\n  editingName: boolean;\n  level: number;\n  strength: number;\n  gender: string;\n}\n\nexport default function Munchkin() {\n  const [startHp, setStartHp] = useState(50);\n\n  const colors = [\n    \"#915A9A\", // Purple\n    \"#F2CA4C\", // Yellow\n    \"#CD2026\", // Red\n    \"#369541\", // Green,\n    \"#596DAD\", // Blue\n  ];\n\n  const createPlayer = (): Player => ({\n    name: \"\",\n    editingName: true,\n    level: 0,\n    strength: 0,\n    gender: \"male\",\n  });\n\n  const changePlayerStat = (\n    playerIndex: number,\n    stat: keyof Player,\n    value: any\n  ) => {\n    const copy: any = [...players];\n    copy[playerIndex][stat] = value;\n    setPlayers(copy);\n  };\n\n  const [players, setPlayers] = useState<Player[]>([createPlayer()]);\n\n  return (\n    <Page>\n      <PlayersContainer>\n        {players.map((player, index) => (\n          <Player color={colors[index]}>\n            {!player.editingName ? (\n              <>\n                <div>\n                  <span>{player.name || \"Unnamed\"}</span>\n                </div>\n                <button\n                  onClick={() => changePlayerStat(index, \"editingName\", true)}\n                >\n                  Edit name\n                </button>\n              </>\n            ) : (\n              <>\n                <input\n                  value={player.name}\n                  placeholder=\"Enter name\"\n                  className=\"player-name\"\n                  onChange={(e) =>\n                    changePlayerStat(index, \"name\", e.target.value)\n                  }\n                />\n                <button\n                  onClick={() => changePlayerStat(index, \"editingName\", false)}\n                >\n                  Confirm\n                </button>\n              </>\n            )}\n\n            <div className=\"player-img-container\">\n              <img\n                className=\"player-img\"\n                src={\n                  process.env.PUBLIC_URL + \"/munchkin/\" + player.gender + \".png\"\n                }\n                alt={\"munchkin-\" + player.gender}\n              />\n            </div>\n            <div className=\"stats\">\n              <div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"level\", player.level + 1)\n                  }\n                >\n                  {\"\\u2191\"}\n                </button>\n                <div>{player.level}</div>\n                <div>Level</div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"level\", player.level - 1)\n                  }\n                >\n                  {\"\\u2193\"}\n                </button>\n              </div>\n              <div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"strength\", player.strength + 1)\n                  }\n                >\n                  {\"\\u2191\"}\n                </button>\n                <div>{player.strength}</div>\n                <div>Strength</div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"strength\", player.strength - 1)\n                  }\n                >\n                  {\"\\u2193\"}\n                </button>\n              </div>\n            </div>\n          </Player>\n        ))}\n      </PlayersContainer>\n    </Page>\n  );\n}\n\nconst Page = styled.div`\n  @import url(\"https://fonts.googleapis.com/css2?family=Grenze+Gotisch:wght@200;400&display=swap\");\n  display: flex;\n  padding: 20px;\n  min-height: 100vh;\n  background-color: #ffe5cc;\n  * {\n    font-family: \"Grenze Gotisch\", cursive;\n    font-size: 22px;\n  }\n`;\n\nconst PlayersContainer = styled.div``;\n\nconst Player: any = styled.div`\n  padding: 20px;\n  border: 1px solid black;\n  border-radius: 6px;\n  box-shadow: 0px 3px 3px #ccc;\n  margin-right: 20px;\n  width: 200px;\n  background-color: #fff2e6;\n  .player-img-container {\n    padding: 8px;\n    display: flex;\n    justify-content: center;\n    border-radius: 10px;\n    background-color: ${(props) => props.color};\n  }\n  .player-img {\n    height: 100px;\n  }\n  .player-name {\n    width: 100%;\n  }\n  .stats {\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    div {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      div {\n        &:first-of-type {\n          padding-top: 4px;\n        }\n        padding-bottom: 4px;\n      }\n      button {\n        height: 40px;\n        width: 40px;\n        font-size: 20px;\n      }\n    }\n  }\n`;\n","const words = [\n  \"Wizard\",\n  \"Noah\",\n  \"Sign\",\n  \"Hamburger\",\n  \"Parrot\",\n  \"Bicycle\",\n  \"Tornado\",\n  \"Virus\",\n  \"Map\",\n  \"Battle\",\n  \"Battleship\",\n  \"Snake\",\n  \"Sticker\",\n  \"Valentine\",\n  \"Cloud\",\n  \"Steam\",\n  \"Beard\",\n  \"Bunk\",\n  \"Second\",\n  \"Chain\",\n  \"Werewolf\",\n  \"Roll\",\n  \"Powder\",\n  \"Glacier\",\n  \"Musketeer\",\n];\n\nexport enum CardState {\n  default = \"default\",\n  guessedNorth = \"guessed north\",\n  guessedSouth = \"guessed south\",\n  bystanderNorth = \"bystander north\",\n  bystanderSouth = \"bystander south\",\n  bystanderBoth = \"bystander both\",\n}\n\nexport interface Card {\n  word: string;\n  state: CardState;\n}\n\nexport const createCards = (): Card[] => {\n  const cards = new Array(25)\n    .fill({})\n    .map((card, index) => ({ word: words[index], state: CardState.default }));\n  return cards;\n};\n\nexport const getNextCardState = (currentState: CardState) => {\n  switch (currentState) {\n    case CardState.default:\n      return CardState.guessedNorth;\n\n    case CardState.guessedNorth:\n      return CardState.guessedSouth;\n\n    case CardState.guessedSouth:\n      return CardState.bystanderNorth;\n\n    case CardState.bystanderNorth:\n      return CardState.bystanderSouth;\n\n    case CardState.bystanderSouth:\n      return CardState.bystanderBoth;\n\n    case CardState.bystanderBoth:\n      return CardState.default;\n\n    default:\n      return CardState.default;\n  }\n};\n","export const sand = \"#ede1c7\";\nexport const green_dark = \"#e0dd56\";\nexport const green_med = \"#048403\";\nexport const green_light = \"#004119\";\nexport const green_gradient = `radial-gradient(${green_dark}, ${green_med}, ${green_light})`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { Card, createCards, getNextCardState } from \"./util/cards\";\nimport { green_gradient, sand } from \"./util/colors\";\n\nexport default function CodenamesDuet() {\n  const [cards, setCards] = useState(createCards());\n  const [turn, setTurn] = useState(8);\n\n  const toggleCardState = (index: number) => {\n    const temp = [...cards];\n    temp[index].state = getNextCardState(temp[index].state);\n    setCards(temp);\n  };\n\n  return (\n    <StyledPage>\n      <div className=\"turn-counter\">\n        <div className=\"buttons\">\n          <button onClick={() => setTurn(turn + 1)}>↑</button>\n          <button onClick={() => setTurn(turn - 1)}>↓</button>\n        </div>\n        <span>Turns left: {turn}</span>\n      </div>\n      <div className=\"board\">\n        {cards.map((card, index) => (\n          <div\n            className={\"word \" + card.state}\n            onClick={() => toggleCardState(index)}\n          >\n            <span className=\"player-north\">{card.word}</span>\n            <span className=\"player-south\">{card.word}</span>\n          </div>\n        ))}\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  background: url(\"/boardgames/codenames-duet/wooden-table-bg.jpg\");\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  .turn-counter {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    transform: rotateZ(-90deg);\n    background: rgba(255, 255, 255, 0.3);\n    padding: 8px;\n    margin-right: 80px;\n    width: 250px;\n    span {\n      font-size: 40px;\n      text-align: center;\n    }\n    .buttons {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 10px;\n      button {\n        height: 80px;\n        width: 80px;\n        border-radius: 8px;\n        border: 0;\n        background: #111;\n        color: white;\n        font-size: 30px;\n      }\n    }\n  }\n  .board {\n    display: flex;\n    flex-wrap: wrap;\n    width: 800px;\n    height: 600px;\n    .word {\n      font-size: 22px;\n      font-weight: 400;\n      position: relative;\n      background: linear-gradient(${sand} 50%, #fff 50%);\n      border: 1px solid black;\n      border-radius: 8px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-around;\n      align-items: center;\n      flex: 1 0 16%;\n      margin: 5px;\n      user-select: none;\n      span {\n        &.player-north {\n          transform: rotateZ(180deg);\n          font-style: italic;\n        }\n      }\n      &.guessed {\n        background: ${green_gradient};\n      }\n      &.north::before,\n      &.south::before,\n      &.both::before {\n        position: absolute;\n        font-size: 28px;\n        font-weight: 500;\n      }\n      &.north::before {\n        content: \"↑\";\n      }\n      &.south::before {\n        content: \"↓\";\n      }\n      &.both::before {\n        content: \"↑↓\";\n      }\n    }\n  }\n`;\n","export enum KeyState {\n  BYSTANDER = \"bystander\",\n  ASSASSIN = \"assasin\",\n  SPY = \"spy\",\n}\n\nconst keys: any = {\n  \"1a\": [\n    /* ROW 1 */\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.SPY,\n\n    /* ROW 2 */\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n\n    /* ROW 3 */\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n\n    /* ROW 4 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n\n    /* ROW 5 */\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n  ],\n  \"1b\": [\n    /* ROW 1 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n    KeyState.SPY,\n    KeyState.SPY,\n\n    /* ROW 2 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n\n    /* ROW 3 */\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.SPY,\n\n    /* ROW 4 */\n    KeyState.SPY,\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n\n    /* ROW 5 */\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.ASSASSIN,\n  ],\n  \"2a\": [\n    /* ROW 1 */\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n\n    /* ROW 2 */\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n\n    /* ROW 3 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n\n    /* ROW 4 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n\n    /* ROW 5 */\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n  ],\n  \"2b\": [\n    /* ROW 1 */\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n\n    /* ROW 2 */\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n\n    /* ROW 3 */\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n\n    /* ROW 4 */\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n\n    /* ROW 5 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n  ],\n  \"3a\": [\n    /* ROW 1 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.SPY,\n\n    /* ROW 2 */\n    KeyState.ASSASSIN,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n\n    /* ROW 3 */\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n\n    /* ROW 4 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n\n    /* ROW 5 */\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n  ],\n  \"3b\": [\n    /* ROW 1 */\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n\n    /* ROW 2 */\n    KeyState.SPY,\n    KeyState.ASSASSIN,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n\n    /* ROW 3 */\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n    KeyState.ASSASSIN,\n\n    /* ROW 4 */\n    KeyState.ASSASSIN,\n    KeyState.SPY,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.SPY,\n\n    /* ROW 5 */\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n    KeyState.BYSTANDER,\n  ],\n};\n\nexport const getKeys = (gameId: string) => {\n  const chars = Array.from(gameId);\n  let temp = \"\";\n  let modifier = \"\";\n  chars.forEach((c: any) => {\n    if (!isNaN(c)) {\n      temp += String(c);\n    } else {\n      modifier = c;\n      return;\n    }\n  });\n  let number = (Number(temp) % 3) + 1;\n  let newModifier = modifier.charCodeAt(0) % 2 === 0 ? \"a\" : \"b\";\n  const newGameId = String(number) + newModifier;\n  return keys[newGameId];\n};\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { green_gradient, green_light, sand } from \"../util/colors\";\nimport { getKeys, KeyState } from \"./util/keys\";\n\nexport default function KeyCard() {\n  const [keys, setKeys] = useState<KeyState[]>([]);\n  const [gameId, setGameId] = useState(\"\");\n  const onSelectGameId = (e: any) => {\n    e.preventDefault();\n    const keys = getKeys(gameId);\n    if (!keys) return;\n    setKeys(keys);\n    setGameId(\"\");\n  };\n  return (\n    <StyledPage>\n      <form onSubmit={onSelectGameId}>\n        <input\n          type=\"text\"\n          name=\"gameId\"\n          placeholder=\"Game ID\"\n          value={gameId}\n          onChange={(e) => setGameId(e.target.value)}\n        />\n        <input type=\"submit\" value=\"Select\" />\n      </form>\n      <div className=\"keys\">\n        {keys.map((key) => (\n          <div className={\"key \" + key} />\n        ))}\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  min-height: 100vh;\n  form {\n    input {\n      height: 40px;\n      margin-bottom: 20px;\n    }\n  }\n  .keys {\n    @media all and (orientation: landscape) {\n      width: 90vh;\n      height: 90vh;\n    }\n    @media all and (orientation: portrait) {\n      width: 90vw;\n      height: 90vw;\n    }\n\n    display: flex;\n    flex-wrap: wrap;\n    border: 1px solid black;\n    .key {\n      flex: 1 0 18%;\n      border: 1px solid black;\n      &.bystander {\n        background: ${sand};\n      }\n      &.assasin {\n        background: black;\n      }\n      &.spy {\n        background: ${green_gradient};\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport KingOfNewYork from \"./pages/KingOfNewYork\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport StarRealms from \"./pages/StarRealms\";\nimport Munchkin from \"./pages/Munchkin\";\nimport CodenamesDuet from \"./pages/CodenamesDuet\";\nimport CodenamesDuetKeyCard from \"./pages/CodenamesDuet/KeyCard\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path={process.env.PUBLIC_URL + \"/codenames-duet/keycard\"}>\n          <CodenamesDuetKeyCard />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + \"/codenames-duet\"}>\n          <CodenamesDuet />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + \"/munchkin\"}>\n          <Munchkin />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + \"/star-realms\"}>\n          <StarRealms />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + \"/king-of-new-york\"}>\n          <KingOfNewYork />\n        </Route>\n        <Route path={process.env.PUBLIC_URL + \"/\"}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["serviceWorker.ts","components/DiceIcon/index.tsx","pages/KingOfNewYork/index.tsx","pages/Home/index.tsx","pages/StarRealms/PlayersPrompt.tsx","pages/StarRealms/index.tsx","pages/Munchkin/index.tsx","pages/ForSale/Card.tsx","pages/ForSale/Board/BuyPhase.tsx","pages/ForSale/Board/SellPhase.tsx","pages/ForSale/Board/index.tsx","pages/ForSale/components/Button.tsx","pages/ForSale/Player.tsx","pages/ForSale/Bidding.tsx","pages/ForSale/Hand.tsx","pages/ForSale/Options.tsx","pages/ForSale/ErrorPages/InfoPage.tsx","pages/ForSale/index.tsx","pages/Codenames/util/cards.ts","pages/Codenames/util/colors.tsx","pages/Codenames/Game/Timer.tsx","pages/Codenames/Game/index.tsx","pages/Codenames/KeyCard/util/keys.ts","pages/Codenames/KeyCard/index.tsx","pages/Codenames/index.tsx","pages/Codenames/router.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","DiceIcon","name","amount","rule","url","RuleContainer","Array","fill","map","_","index","src","alt","style","marginRight","height","width","styled","div","KingOfNewYork","Background","Overlay","Flex","Home","StyledPage","to","PlayersPrompt","display","setPlayerCount","StyledPrompt","onClick","StarRealms","useState","startHp","players","setPlayers","showDialog","setShowDialog","sound","Audio","setHp","playerIndex","play","copy","newHp","hp","marginBottom","PlayersContainer","player","Player","HealthBar","percentage","paddingTop","count","newPlayers","i","push","props","Munchkin","colors","changePlayerStat","stat","value","editingName","level","strength","gender","Page","color","placeholder","className","onChange","e","target","changeGender","process","Card","card","selected","type","StyledCard","whileTap","scale","padValue","id","newId","toString","length","motion","BuyPhase","table","sort","a","b","currentBid","pass","SellPhase","sales","socket","setSales","SalesReveal","sale","justifyContent","flexWrap","cheque","money","Board","isStarted","phase","Button","StyledButton","whileHover","children","button","updateName","setName","onSubmit","preventDefault","Bidding","visible","setCurrentBid","useEffect","on","changeBid","c","isDisabled","disabled","emit","Hand","selectedCard","setSelectedCard","cards","StyledHand","textAlign","handleSelect","Options","clickedReset","setClickedReset","StyledOptions","setTimeout","AlreadyStarted","info","reset","horn","setSocket","setPlayer","setTable","setInfo","setIsStarted","isBoard","setIsBoard","setPhase","console","log","socketIOClient","reload","playersResponse","msg","data","CardState","words","default","require","deep","createCards","language","version","shuffledWords","j","x","Math","floor","random","shuffle","word","state","getNextCardState","standard","currentState","guessedBlue","guessedRed","guessedBystander","duet","guessedGreen","bystanderNorth","bystanderSouth","bystanderBoth","green_gradient","red","Timer","timeLeft","setTimeLeft","isActive","setIsActive","TimerStyled","p","Codenames","useParams","cardset","setCards","turn","setTurn","temp","toggleCardState","isGuessed","KeyState","countKeyCards","keyCard","forEach","key","randomPosition","createRandomStandardKeys","redCount","blueCount","alert","RED","BLUE","BYSTANDER","ASSASSIN","getKeys","gameId","settings","spy","spyOverlap","bystander","assasin","SPY","randomPos","reverse","createRandomDuetKeys","href","btoa","JSON","stringify","KeyCard","preset","keys","setKeys","urlForFriend","setUrlForFriend","hideUrl","setHideUrl","parse","atob","wordBreak","generatedKeys","setLanguage","setVersion","CodenamesRouter","path","exact","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.22b16270.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nexport default function DiceIcon({\n  name,\n  amount,\n  rule,\n}: {\n  name: string;\n  amount: number;\n  rule: string;\n}) {\n  const url = \"/boardgames/dice/\" + name;\n  const size = 50;\n  return (\n    <RuleContainer>\n      {Array(amount)\n        .fill(0)\n        .map((_: any, index: any) => (\n          <img\n            src={url}\n            alt={name}\n            style={{ marginRight: \"10px\" }}\n            height={size}\n            width={size}\n          />\n        ))}\n      <p>{rule}</p>\n    </RuleContainer>\n  );\n}\n\nconst RuleContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport DiceIcon from \"../../components/DiceIcon\";\nimport styled from \"@emotion/styled\";\n\nexport default function KingOfNewYork() {\n  return (\n    <Background>\n      <Overlay>\n        <Flex>\n          <DiceIcon name=\"01_heart.png\" amount={1} rule=\"Heal x\" />\n          <DiceIcon name=\"01_heart.png\" amount={3} rule=\"Take power-up card\" />\n        </Flex>\n        <DiceIcon\n          name=\"02_destroy.png\"\n          amount={1}\n          rule=\"Damage x to buildings or units\"\n        />\n        <DiceIcon name=\"03_energy.png\" amount={1} rule=\"Take x energy\" />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={1}\n          rule=\"Units in your borough you damage you\"\n        />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={2}\n          rule=\"+ other monsters in your borough\"\n        />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={3}\n          rule=\"All units damage all monsters + take the Statue of Liberty\"\n        />\n        <Flex>\n          <DiceIcon name=\"05_claw.png\" amount={1} rule=\"Do x damage\" />\n          <DiceIcon\n            name=\"05_claw.png\"\n            amount={4}\n            rule=\"Berserk (if using expansion)\"\n          />\n        </Flex>\n\n        <Flex>\n          <DiceIcon name=\"06_star.png\" amount={1} rule=\"Nothing*\" />\n          <DiceIcon name=\"06_star.png\" amount={3} rule=\"Take Superstar card\" />\n        </Flex>\n\n        <div>\n          <p>*If you have the Superstar card; x victory points</p>\n        </div>\n      </Overlay>\n    </Background>\n  );\n}\n\nconst Background = styled.div`\n  height: 100vh;\n  width: 100vw;\n  overflow: auto;\n\n  &::before {\n    background-image: url(\"/boardgames/bg.png\");\n    background-position: center;\n    background-size: cover;\n    width: 100%;\n    height: 100%;\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    filter: brightness(50%);\n  }\n`;\n\nconst Overlay = styled.div`\n  padding: 25px;\n  background: rgba(255, 255, 255, 0.8);\n  margin: 0 50px;\n  margin-top: 50px;\n  border-radius: 20px;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  div {\n    margin-right: 10px;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <StyledPage>\n      <Link to={\"/king-of-new-york\"}>King of New York</Link>\n      <Link to={\"/star-realms\"}>Star Realms</Link>\n      <Link to={\"/munchkin\"}>Munchkin</Link>\n      <Link to={\"/codenames\"}>Codenames</Link>\n      <Link to={\"/for-sale\"}>For Sale</Link>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 100px 20px 0;\n  min-height: 100vh;\n  background-image: url(/boardgames/main-bg.gif);\n  background-position: center;\n  background-size: cover;\n  a {\n    --link-color: rgba(255, 255, 255, 0.3);\n    --link-color-hover: rgba(255, 255, 255, 0.7);\n    --link-text-color: black;\n    padding: 12px;\n    border-radius: 8px;\n    font-size: 32px;\n    background-color: var(--link-color);\n    color: var(--link-text-color);\n    text-decoration: none;\n    margin-bottom: 16px;\n    text-align: center;\n    white-space: nowrap;\n    overflow: hidden;\n    &:hover {\n      background-color: var(--link-color-hover);\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport default function PlayersPrompt({ display, setPlayerCount }: any) {\n  if (!display) return null;\n  return (\n    <StyledPrompt>\n      <p>How many players?</p>\n      <div>\n        <button onClick={() => setPlayerCount(2)}>2</button>\n        <button onClick={() => setPlayerCount(3)}>3</button>\n        <button onClick={() => setPlayerCount(4)}>4</button>\n      </div>\n    </StyledPrompt>\n  );\n}\n\nconst StyledPrompt = styled.div`\n  position: fixed;\n  background: rgba(255, 255, 255, 0.9);\n  height: 90vh;\n  width: 80vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-size: 30px;\n  button {\n    height: 80px;\n    width: 100px;\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport PlayersPrompt from \"./PlayersPrompt\";\n\ninterface Player {\n  hp: number;\n}\n\nexport default function StarRealms() {\n  const [startHp] = useState(50);\n  const createPlayer = (): Player => ({ hp: startHp });\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [showDialog, setShowDialog] = useState(\"player-count\");\n\n  const setPlayerCount = (count: number) => {\n    const newPlayers = [];\n    for (let i = 0; i < count; i++) {\n      newPlayers.push(createPlayer());\n    }\n    setPlayers(newPlayers);\n    setShowDialog(\"\");\n  };\n\n  const sound = new Audio(\"/boardgames/star-realms/laser_shot.mp3\");\n\n  const setHp = (playerIndex: number, amount: number) => {\n    if (amount < 0) {\n      sound.play();\n    }\n    const copy = [...players];\n    const currentHp = copy[playerIndex].hp;\n    let newHp = currentHp + amount;\n    if (newHp < 0) newHp = 0;\n    copy[playerIndex].hp = newHp;\n    setPlayers(copy);\n  };\n\n  const resetGame = () => {\n    setPlayers([]);\n    setShowDialog(\"player-count\");\n  };\n\n  return (\n    <StyledPage>\n      {showDialog !== \"player-count\" && (\n        <button onClick={resetGame} style={{ marginBottom: \"20px\" }}>\n          Reset game\n        </button>\n      )}\n      <PlayersContainer>\n        {players.map((player, index) => (\n          <Player>\n            <HealthBar percentage={(player.hp / startHp) * 100}>\n              <span>{player.hp}</span>\n            </HealthBar>\n            {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <p>{\"Player \" + (index + 1)}</p>\n            </div> */}\n            <div style={{ paddingTop: \"16px\" }}>\n              <button onClick={() => setHp(index, -5)}>-5</button>\n              <button onClick={() => setHp(index, -1)}>-1</button>\n              <button onClick={() => setHp(index, 1)}>+1</button>\n              <button onClick={() => setHp(index, 5)}>+5</button>\n            </div>\n          </Player>\n        ))}\n      </PlayersContainer>\n      <PlayersPrompt\n        display={showDialog === \"player-count\"}\n        setPlayerCount={setPlayerCount}\n      />\n    </StyledPage>\n  );\n}\n\nfunction getPlayerColor(percentage: number) {\n  if (percentage <= 0) return \"#333\";\n  if (percentage <= 25) return \"#B81D13\";\n  if (percentage <= 50) return \"#EFB700\";\n  return \"#008450\";\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  min-height: 100vh;\n  background: url(\"/boardgames/star-realms/star-wars-backgrounds-14.jpg\");\n  animation: 10s bg alternate infinite;\n  background-position: center;\n  @keyframes bg {\n    0% {\n      background-size: 100%;\n    }\n    100% {\n      background-size: 120%;\n    }\n  }\n`;\n\nconst PlayersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Player = styled.div`\n  border: 1px solid black;\n  overflow: hidden;\n  padding: 16px;\n  font-size: 30px;\n  background-color: #eee;\n  margin-bottom: 20px;\n  opacity: 0.9;\n  border-radius: 20px;\n  border: 10px solid #333;\n  p {\n    margin: 0 0 10px;\n  }\n  button {\n    height: 80px;\n    width: 100px;\n    font-size: 24px;\n    border: 0;\n    background-color: #ccc;\n    &:not(:last-of-type) {\n      margin-right: 10px;\n    }\n  }\n`;\n\nconst HealthBar: any = styled.div`\n  height: 60px;\n  width: calc(100% + 32px);\n  background: black;\n  margin-left: -16px;\n  margin-top: -16px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    position: absolute;\n    color: white;\n  }\n  &::after {\n    content: \"\";\n    background: ${(props: any) => getPlayerColor(props.percentage)};\n    display: block;\n    height: 100%;\n    width: ${(props: any) => props.percentage + \"%\"};\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\n\ninterface Player {\n  name: string;\n  editingName: boolean;\n  level: number;\n  strength: number;\n  gender: string;\n}\n\nexport default function Munchkin() {\n  // const [startHp, setStartHp] = useState(50);\n\n  const colors = [\n    \"#915A9A\", // Purple\n    \"#F2CA4C\", // Yellow\n    \"#CD2026\", // Red\n    \"#369541\", // Green,\n    \"#596DAD\", // Blue\n  ];\n\n  const createPlayer = (): Player => ({\n    name: \"\",\n    editingName: true,\n    level: 0,\n    strength: 0,\n    gender: \"male\",\n  });\n\n  const changePlayerStat = (\n    playerIndex: number,\n    stat: keyof Player,\n    value: any\n  ) => {\n    const copy: any = [...players];\n    copy[playerIndex][stat] = value;\n    setPlayers(copy);\n  };\n\n  const changeGender = (playerIndex: number) => {\n    const player = players[playerIndex];\n    changePlayerStat(\n      playerIndex,\n      \"gender\",\n      player.gender === \"male\" ? \"female\" : \"male\"\n    );\n  };\n\n  const addPlayer = () => {\n    setPlayers([...players, createPlayer()]);\n  };\n\n  const [players, setPlayers] = useState<Player[]>([createPlayer()]);\n\n  return (\n    <Page>\n      <PlayersContainer>\n        {players.map((player, index) => (\n          <Player color={colors[index]}>\n            {!player.editingName ? (\n              <>\n                <div>\n                  <span>{player.name || \"Unnamed\"}</span>\n                </div>\n                <button\n                  onClick={() => changePlayerStat(index, \"editingName\", true)}\n                >\n                  Edit name\n                </button>\n              </>\n            ) : (\n              <>\n                <input\n                  value={player.name}\n                  placeholder=\"Enter name\"\n                  className=\"player-name\"\n                  onChange={(e) =>\n                    changePlayerStat(index, \"name\", e.target.value)\n                  }\n                />\n                <button\n                  onClick={() => changePlayerStat(index, \"editingName\", false)}\n                >\n                  Confirm\n                </button>\n              </>\n            )}\n\n            <div\n              className=\"player-img-container\"\n              onClick={() => changeGender(index)}\n            >\n              <img\n                className=\"player-img\"\n                src={\n                  process.env.PUBLIC_URL + \"/munchkin/\" + player.gender + \".png\"\n                }\n                alt={\"munchkin-\" + player.gender}\n              />\n            </div>\n            <div className=\"stats\">\n              <div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"level\", player.level + 1)\n                  }\n                >\n                  {\"\\u2191\"}\n                </button>\n                <div>{player.level}</div>\n                <div>Level</div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"level\", player.level - 1)\n                  }\n                >\n                  {\"\\u2193\"}\n                </button>\n              </div>\n              <div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"strength\", player.strength + 1)\n                  }\n                >\n                  {\"\\u2191\"}\n                </button>\n                <div>{player.strength}</div>\n                <div>Strength</div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"strength\", player.strength - 1)\n                  }\n                >\n                  {\"\\u2193\"}\n                </button>\n              </div>\n            </div>\n          </Player>\n        ))}\n        <button onClick={addPlayer}>Add player</button>\n      </PlayersContainer>\n    </Page>\n  );\n}\n\nconst Page = styled.div`\n  @import url(\"https://fonts.googleapis.com/css2?family=Grenze+Gotisch:wght@200;400&display=swap\");\n  padding: 20px;\n  min-height: 100vh;\n  background-color: #ffe5cc;\n  * {\n    font-family: \"Grenze Gotisch\", cursive;\n    font-size: 22px;\n  }\n`;\n\nconst PlayersContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Player: any = styled.div`\n  padding: 20px;\n  border: 1px solid black;\n  border-radius: 6px;\n  box-shadow: 0px 3px 3px #ccc;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  width: 200px;\n  background-color: #fff2e6;\n  .player-img-container {\n    padding: 8px;\n    display: flex;\n    justify-content: center;\n    border-radius: 10px;\n    background-color: ${(props) => props.color};\n  }\n  .player-img {\n    height: 100px;\n  }\n  .player-name {\n    width: 100%;\n  }\n  .stats {\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    div {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      div {\n        &:first-of-type {\n          padding-top: 4px;\n        }\n        padding-bottom: 4px;\n      }\n      button {\n        height: 40px;\n        width: 40px;\n        font-size: 20px;\n      }\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\n\nexport default function Card({\n  card,\n  selected,\n  onClick,\n  type,\n}: {\n  card: { name: string; value: number };\n  selected?: boolean;\n  onClick?: any;\n  type?: string;\n}) {\n  const handleClick = () => {\n    if (onClick) onClick();\n  };\n\n  const imgPath = () => {\n    if (type === \"cheques\") {\n      return `${process.env.PUBLIC_URL}/for-sale/cheques/tile${padValue(\n        card.value\n      )}.png`;\n    }\n    return `${process.env.PUBLIC_URL}/for-sale/homes/tile${padValue(\n      card.value\n    )}.png`;\n  };\n\n  return (\n    <StyledCard\n      whileTap={{ scale: 1.05 }}\n      className={\"card\" + (selected ? \" selected\" : \"\")}\n      onClick={handleClick}\n    >\n      <img src={imgPath()} alt=\"\" />\n    </StyledCard>\n  );\n}\n\nconst padValue = (id: number) => {\n  let newId = id.toString();\n  if (newId.length === 1) return \"00\" + id;\n  if (newId.length === 2) return \"0\" + id;\n  return id;\n};\n\nconst StyledCard: any = styled(motion.div)`\n  flex: 0 1 48%;\n  border: 1px solid black;\n  margin-bottom: 10px;\n  background: white;\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 3px 3px 3px #ccc;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  p {\n    text-align: center;\n  }\n  img {\n    height: 100%;\n    width: 100%;\n    user-select: none;\n    touch-action: none;\n    pointer-events: none;\n  }\n  &.selected {\n    filter: brightness(50%);\n  }\n`;\n","import React from \"react\";\nimport Card from \"../Card\";\n\nexport default function BuyPhase({ table, players }: any) {\n  return (\n    <>\n      <h1>Buying Phase</h1>\n      <div className=\"cards island\">\n        {table.map((card: any) => (\n          <Card card={card} />\n        ))}\n      </div>\n      <table>\n        <thead>\n          <th>PLAYER</th>\n          <th>BID</th>\n        </thead>\n        <tbody>\n          {players\n            .sort((a: any, b: any) => b.currentBid - a.currentBid)\n            .map((player: any) => (\n              <tr className={player.pass ? \"pass\" : \"\"}>\n                <td>{player.name}</td>\n                <td>\n                  {player.currentBid > 0 ? player.currentBid + \".000$\" : 0}\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { setInterval } from \"timers\";\nimport Card from \"../Card\";\n\nexport default function SellPhase({\n  table,\n  players,\n  socket,\n  sales,\n  setSales,\n}: any) {\n  if (sales.length > 1) {\n    return (\n      <SalesReveal>\n        <div className=\"container\">\n          {sales.map((sale: any) => (\n            <div className=\"sale\">\n              <h2>{sale.player.name}</h2>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  flexWrap: \"wrap\",\n                }}\n              >\n                <Card card={sale.card} />\n                <Card card={sale.cheque} type=\"cheques\" />\n              </div>\n            </div>\n          ))}\n        </div>\n        <button onClick={() => setSales([])} id=\"btn-next\">\n          Next\n        </button>\n      </SalesReveal>\n    );\n  }\n\n  return (\n    <>\n      <h1>Selling Phase</h1>\n      <div className=\"cards island\">\n        {table.map((card: any) => (\n          <Card card={card} type=\"cheques\" />\n        ))}\n      </div>\n      <table>\n        <thead>\n          <th>PLAYER</th>\n          <th>MONEY</th>\n        </thead>\n        <tbody>\n          {players\n            .sort((a: any, b: any) => b.money - a.money)\n            .map((player: any) => (\n              <tr className={player.pass ? \"pass\" : \"\"}>\n                <td>{player.name}</td>\n                <td>{player.money}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nconst SalesReveal = styled.div`\n  .container {\n    display: flex;\n    .sale {\n      flex: 0 1 32%;\n    }\n  }\n  #btn-next {\n    width: 100%;\n    height: 80px;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport BuyPhase from \"./BuyPhase\";\nimport SellPhase from \"./SellPhase\";\n\nexport default function Board({\n  isStarted,\n  players,\n  table,\n  phase,\n  socket,\n  sales,\n  setSales,\n}: any) {\n  if (!isStarted)\n    return (\n      <StyledPage>\n        <h1>Waiting to start</h1>\n        <div id=\"game-box\">\n          <img src={process.env.PUBLIC_URL + \"/for-sale/box.jpg\"} alt=\"\" />\n        </div>\n      </StyledPage>\n    );\n  return (\n    <StyledPage>\n      <div className=\"container\">\n        {phase === \"buying houses\" && (\n          <BuyPhase players={players} table={table} />\n        )}\n        {phase === \"selling houses\" && (\n          <SellPhase\n            players={players}\n            table={table}\n            socket={socket}\n            sales={sales}\n            setSales={setSales}\n          />\n        )}\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  background-color: #b5d3e7;\n  min-height: 100vh;\n  padding-top: 20px;\n  h1 {\n    text-align: center;\n  }\n  .container {\n    max-width: 600px;\n    margin: 0 auto;\n  }\n  .cards {\n    display: flex;\n    justify-content: space-between;\n    /* flex-wrap: wrap; */\n  }\n  table {\n    border-spacing: 0;\n    th {\n      text-align: left;\n    }\n    width: 100%;\n    * {\n      font-size: 30px;\n    }\n\n    tr {\n      &:nth-of-type(odd) {\n        background-color: rgba(255, 255, 255, 0.3);\n      }\n      &.pass {\n        * {\n          text-decoration: line-through;\n        }\n      }\n      td {\n        padding: 4px;\n      }\n    }\n  }\n  #game-box {\n    width: 600px;\n    margin: 0 auto;\n    max-width: 80%;\n    img {\n      width: 100%;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\n\nexport default function Button(props: any) {\n  return (\n    <StyledButton\n      whileHover={{ scale: 1.025 }}\n      whileTap={{ scale: 1.05 }}\n      {...props}\n    >\n      {props.children}\n    </StyledButton>\n  );\n}\n\nconst StyledButton = styled(motion.button)`\n  height: 60px;\n  margin-bottom: 6px;\n  flex: 1 0 45%;\n  background-color: white;\n  border: 1px solid #333;\n  border-radius: 12px;\n  text-transform: uppercase;\n  outline: 0;\n  &:nth-of-type(odd) {\n    &:not(:last-of-type) {\n      margin-right: 6px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport Button from \"./components/Button\";\n\nexport default function Player({ updateName, player, isStarted }: any) {\n  const [name, setName] = useState(\"\");\n\n  const handleNameChange = (e: any) => {\n    e.preventDefault();\n    updateName(name);\n  };\n\n  return (\n    <StyledPage className=\"island\">\n      <form onSubmit={handleNameChange}>\n        <div className=\"name-input\">\n          {!isStarted && (\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Enter name\"\n            />\n          )}\n          {isStarted && <h2 id=\"player-name\">{player.name}</h2>}\n          {name !== player.name && !isStarted && (\n            <Button id=\"set-name\">\n              <span>OK</span>\n            </Button>\n          )}\n        </div>\n      </form>\n      {isStarted && (\n        <div className=\"money\">\n          <span>Total money: {player.money}.000$</span>\n        </div>\n      )}\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  #player-name {\n    text-align: center;\n  }\n\n  .money {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n    color: green;\n  }\n  .name-input {\n    position: relative;\n    input {\n      border: 1px solid black;\n      border-radius: 16px;\n      width: 100%;\n      height: 60px;\n      text-align: left;\n      padding-left: 10px;\n    }\n    button {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 20%;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { green_med, red } from \"../Codenames/util/colors\";\nimport Button from \"./components/Button\";\n\nexport default function Bidding({ socket, player, visible }: any) {\n  const [currentBid, setCurrentBid] = useState(0);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on(\"reset-bids\", () => {\n      setCurrentBid(0);\n    });\n  }, [socket]);\n\n  const sendBid = () => {\n    socket.emit(\"bid\", currentBid);\n  };\n\n  const changeBid = (type: any) => {\n    if (type === \"increase\") {\n      setCurrentBid((c) => {\n        if (c < player.money) {\n          return c + 1;\n        } else {\n          return c;\n        }\n      });\n    } else {\n      setCurrentBid((c) => {\n        if (c > 0) {\n          return c - 1;\n        } else {\n          return c;\n        }\n      });\n    }\n  };\n\n  const isDisabled = () => {\n    return player.pass;\n  };\n\n  if (!visible) return null;\n\n  return (\n    <StyledPage className=\"island\">\n      {!isDisabled() && (\n        <p id=\"current-bid\">\n          Current bid: {currentBid === 0 ? \"--\" : currentBid + \".000$\"}\n        </p>\n      )}\n      {isDisabled() && (\n        <>\n          <p>You passed.</p> <p>Wait for the next round</p>\n        </>\n      )}\n      <div className=\"buttons\">\n        <Button\n          onClick={() => changeBid(\"increase\")}\n          id=\"up\"\n          disabled={isDisabled()}\n        >\n          <span>MORE</span>\n        </Button>\n\n        <Button\n          onClick={() => changeBid(\"decrease\")}\n          id=\"down\"\n          disabled={isDisabled()}\n        >\n          <span>LESS</span>\n        </Button>\n\n        <Button onClick={sendBid} id=\"bid\" disabled={isDisabled()}>\n          <span>BID</span>\n        </Button>\n\n        <Button\n          onClick={() => socket.emit(\"pass\")}\n          id=\"pass\"\n          disabled={isDisabled()}\n        >\n          <span>PASS</span>\n        </Button>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  #current-bid {\n    text-align: center;\n  }\n  .buttons {\n    display: flex;\n    flex-wrap: wrap;\n    #bid {\n      background-color: #31bd42;\n    }\n    #pass {\n      background-color: #e0352f;\n    }\n    #bid,\n    #pass {\n      flex: 0 0 100%;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\n\nexport default function Hand({\n  player,\n  socket,\n  visible,\n  disabled,\n  phase,\n}: any) {\n  const [selectedCard, setSelectedCard] = useState(-1);\n  const handleSelect = (card: any) => {\n    if (phase !== \"selling houses\") return;\n    setSelectedCard(card.id);\n    socket.emit(\"select-card\", card);\n  };\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on(\"reset-cards\", () => {\n      setSelectedCard(-1);\n    });\n  }, [socket]);\n\n  if (!visible) return null;\n  if (player.cards.length === 0) return null;\n\n  return (\n    <StyledHand className=\"island\">\n      {disabled && (\n        <h2 style={{ textAlign: \"center\", width: \"100%\" }}>\n          Please wait for the next round\n        </h2>\n      )}\n      {!disabled && (\n        <>\n          {player.cards.map((card: any) => (\n            <Card\n              card={card}\n              selected={selectedCard === card.id}\n              onClick={() => handleSelect(card)}\n            />\n          ))}\n        </>\n      )}\n    </StyledHand>\n  );\n}\n\nconst StyledHand = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  .card {\n    margin-top: -150px;\n    &:nth-of-type(1) {\n      margin-top: 0;\n    }\n    &:nth-of-type(2) {\n      margin-top: 0;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport { red } from \"../Codenames/util/colors\";\nimport Button from \"./components/Button\";\n\nexport default function Options({ socket, visible }: any) {\n  const [clickedReset, setClickedReset] = useState(false);\n  const handleResetGame = () => {\n    if (!clickedReset) {\n      setClickedReset(true);\n      setTimeout(() => {\n        setClickedReset(false);\n      }, 3000);\n      return;\n    }\n    socket.emit(\"reset-game\");\n    setClickedReset(false);\n  };\n  return (\n    <StyledOptions\n      className=\"island\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <Button\n        onClick={handleResetGame}\n        id=\"reset-btn\"\n        className={clickedReset ? \"clicked\" : \"\"}\n      >\n        <span>{!clickedReset ? \"Reset\" : \"Are you sure?\"}</span>\n      </Button>\n\n      {visible && (\n        <>\n          <Button onClick={() => socket.emit(\"is-board\")}>\n            <span>Board</span>\n          </Button>\n          <Button onClick={() => socket.emit(\"start-game\")}>\n            <span>Start Game</span>\n          </Button>\n        </>\n      )}\n    </StyledOptions>\n  );\n}\n\nconst StyledOptions = styled.div`\n  #reset-btn {\n    transition: 1s background-color;\n    &.clicked {\n      background-color: #e0352f;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport default function AlreadyStarted({\n  info,\n  reset,\n}: {\n  info: string;\n  reset: any;\n}) {\n  return (\n    <StyledPage>\n      <h1>{info}</h1>\n      <button onClick={reset}>Reset Game</button>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  padding-top: 20px;\n  h1 {\n    text-align: center;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Board from \"./Board\";\nimport Player from \"./Player\";\nimport Bidding from \"./Bidding\";\nimport Hand from \"./Hand\";\nimport Options from \"./Options\";\nimport InfoPage from \"./ErrorPages/InfoPage\";\nconst ENDPOINT =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://192.168.8.105:4001\"\n    : \"https://forsale.ngram.dk\";\nconst horn = new Audio(process.env.PUBLIC_URL + \"/for-sale/party_horn.mp3\");\n\nexport default function Home() {\n  const [socket, setSocket] = useState<any>(null);\n  const [player, setPlayer] = useState({ id: \"\", money: 0, cards: [] });\n  const [players, setPlayers] = useState([]);\n  const [table, setTable] = useState([]);\n  const [info, setInfo] = useState(\"\");\n  const [isStarted, setIsStarted] = useState(false);\n  const [isBoard, setIsBoard] = useState(false);\n  const [phase, setPhase] = useState(\"\");\n  const [sales, setSales] = useState([]);\n\n  console.log(process.env.NODE_ENV);\n\n  useEffect(() => {\n    setSocket(socketIOClient(ENDPOINT));\n  }, []);\n\n  const resetGame = () => {\n    setInfo(\"\");\n    setIsStarted(false);\n    setIsBoard(false);\n  };\n\n  useEffect(() => {\n    horn.play();\n\n    if (!socket) return;\n\n    socket.on(\"reconnect_attempt\", () => {\n      setInfo(`Trying to connect to ${ENDPOINT} ...`);\n    });\n\n    socket.on(\"disconnect-all\", () => {\n      window.location.reload();\n    });\n\n    socket.on(\"connect\", () => {\n      resetGame();\n    });\n\n    socket.on(\"connect_failed\", () => {\n      setInfo(\"Connection failed\");\n    });\n\n    socket.on(\"is-board\", () => {\n      setIsBoard(true);\n    });\n\n    socket.on(\"player\", (player: any) => {\n      setPlayer(player);\n    });\n\n    socket.on(\"players\", (playersResponse: any) => {\n      setPlayers(playersResponse);\n    });\n\n    socket.on(\"info\", (msg: any) => {\n      setInfo(msg);\n    });\n\n    socket.on(\"table\", (data: any) => {\n      setTable(data);\n    });\n\n    socket.on(\"game-state\", (data: boolean) => {\n      setIsStarted(data);\n    });\n\n    socket.on(\"set-phase\", (data: string) => {\n      setPhase(data);\n    });\n\n    socket.on(\"reveal-sales\", (data: any) => {\n      setSales(data);\n    });\n  }, [socket]);\n\n  if (info)\n    return <InfoPage info={info} reset={() => socket.emit(\"reset-game\")} />;\n  if (isBoard)\n    return (\n      <Board\n        isStarted={isStarted}\n        table={table}\n        players={players}\n        phase={phase}\n        socket={socket}\n        sales={sales}\n        setSales={setSales}\n      />\n    );\n\n  return (\n    <StyledPage>\n      <div className=\"container\">\n        <Player\n          updateName={(name: string) => socket.emit(\"set-name\", name)}\n          player={player}\n          isStarted={isStarted}\n        />\n\n        <Bidding\n          socket={socket}\n          player={player}\n          visible={phase === \"buying houses\"}\n        />\n\n        <Hand\n          player={player}\n          socket={socket}\n          visible={isStarted}\n          disabled={sales.length > 0}\n          phase={phase}\n        />\n\n        <Options socket={socket} visible={!isStarted} />\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  min-height: 100vh;\n  background-color: #b5d3e7;\n  padding: 10px;\n  padding-top: 40px;\n  * {\n    font-size: 26px;\n  }\n  .container {\n    max-width: 500px;\n    margin: 0 auto;\n    padding: 20px;\n    background: white;\n    border-radius: 16px;\n  }\n  .island {\n    &:not(:first-of-type) {\n      &::before {\n        display: block;\n        content: \"\";\n        width: 100%;\n        height: 1px;\n        background: #ccc;\n        margin: 40px 0;\n      }\n    }\n  }\n  #reset-btn {\n    width: 100%;\n  }\n`;\n","const words: any = {\n  default: require(\"./data/default.json\"),\n  deep: require(\"./data/deep.json\"),\n};\n\nexport enum CardState {\n  default = \"default\",\n  guessedGreen = \"guessed spy green\",\n  guessedRed = \"guessed spy red\",\n  guessedBlue = \"guessed spy blue\",\n  guessedBystander = \"guessed bystander\",\n  bystanderNorth = \"bystander north\",\n  bystanderSouth = \"bystander south\",\n  bystanderBoth = \"bystander both\",\n}\n\nexport interface Card {\n  word: string;\n  state: CardState;\n}\n\nfunction shuffle(a: any[]) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nexport const createCards = (language: string, version: string): Card[] => {\n  const selectedWords = words[version];\n  const shuffledWords = shuffle(selectedWords);\n  const cards = new Array(25).fill({}).map((card, index) => ({\n    word: shuffledWords[index][language],\n    state: CardState.default,\n  }));\n  return cards;\n};\n\nexport const getNextCardState = {\n  standard: (currentState: CardState) => {\n    switch (currentState) {\n      case CardState.default:\n        return CardState.guessedBlue;\n\n      case CardState.guessedBlue:\n        return CardState.guessedRed;\n\n      case CardState.guessedRed:\n        return CardState.guessedBystander;\n\n      case CardState.guessedBystander:\n        return CardState.default;\n\n      default:\n        return CardState.default;\n    }\n  },\n  duet: (currentState: CardState) => {\n    switch (currentState) {\n      case CardState.default:\n        return CardState.guessedGreen;\n\n      case CardState.guessedGreen:\n        return CardState.bystanderNorth;\n\n      case CardState.bystanderNorth:\n        return CardState.bystanderSouth;\n\n      case CardState.bystanderSouth:\n        return CardState.bystanderBoth;\n\n      case CardState.bystanderBoth:\n        return CardState.default;\n\n      default:\n        return CardState.default;\n    }\n  },\n};\n","export const sand = \"#ede1c7\";\nexport const green_dark = \"#e0dd56\";\nexport const green_med = \"#048403\";\nexport const green_light = \"#004119\";\nexport const green_gradient = `radial-gradient(${green_dark}, ${green_med}, ${green_light})`;\nexport const red = \"#DE3E19\";\nexport const blue = \"#4C7DA7\";\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nexport default function Timer() {\n  const startTime = 60;\n  const [timeLeft, setTimeLeft] = useState(startTime);\n  const [isActive, setIsActive] = useState(false);\n  // const sounds = {\n  //   tick: new Audio(process.env.PUBLIC_URL + \"/codenames/alarm-press.mp3\"),\n  //   alarm: new Audio(process.env.PUBLIC_URL + \"/codenames/alarm-bell.mp3\"),\n  // };\n\n  useEffect(() => {\n    if (isActive) {\n      setTimeout(() => {\n        if (timeLeft < 1) {\n          //   sounds.alarm.play();\n          setIsActive(false);\n        } else {\n          setTimeLeft((timeLeft) => timeLeft - 1);\n          //   sounds.tick.play();\n        }\n      }, 1000);\n    } else {\n      setTimeLeft(startTime);\n    }\n  }, [timeLeft, isActive]);\n\n  const toggleTimer = () => {\n    setIsActive((isActive) => !isActive);\n  };\n\n  return (\n    <TimerStyled\n      onClick={toggleTimer}\n      percentage={(timeLeft / startTime) * 100}\n    >\n      <div className=\"timeLeft\">{timeLeft}</div>\n      <div className=\"timer\"></div>\n    </TimerStyled>\n  );\n}\n\nconst TimerStyled: any = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100px;\n  height: 100%;\n  border: 1px solid black;\n  background: rgba(0, 0, 0, 0.3);\n  margin-right: 20px;\n  .timeLeft {\n    margin: 0 auto;\n    z-index: 99;\n    font-size: 30px;\n    transform: rotateZ(-90deg);\n  }\n  .timer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: ${(props: any) => props.percentage + \"%\"};\n    background: ${(props: any) => {\n      const p = props.percentage;\n      if (p < 25) {\n        return \"rgba(150,0,0,0.8)\";\n      } else if (p < 50) {\n        return \"rgba(150,150,0,0.8)\";\n      } else {\n        return \"rgba(0,150,0,0.8)\";\n      }\n    }};\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, CardState, createCards, getNextCardState } from \"../util/cards\";\nimport { blue, green_gradient, red, sand } from \"../util/colors\";\nimport Timer from \"./Timer\";\n\nexport default function Codenames() {\n  const { language, version, cardset } = useParams<{\n    language: string;\n    version: \"standard\" | \"duet\";\n    cardset: string;\n  }>();\n\n  const [cards, setCards] = useState(createCards(language, cardset));\n  const [turn, setTurn] = useState(9);\n\n  const toggleCardState = (index: number) => {\n    const temp = [...cards];\n    temp[index].state = getNextCardState[version](temp[index].state);\n    setCards(temp);\n  };\n\n  const isGuessed = (card: Card) => {\n    if (card.state === CardState.guessedGreen) return true;\n    // if (card.state === CardState.guessedSouth) return true;\n    return false;\n  };\n\n  return (\n    <StyledPage>\n      <div className=\"container\">\n        {version === \"standard\" && <Timer />}\n        {version === \"duet\" && (\n          <div className=\"turn-counter\">\n            <div className=\"buttons\">\n              <button onClick={() => setTurn(turn + 1)}>↑</button>\n              <button onClick={() => setTurn(turn - 1)}>↓</button>\n            </div>\n            <span>Turns left: {turn}</span>\n          </div>\n        )}\n        <div className=\"board\">\n          {cards.map((card, index) => (\n            <div\n              className={\"word \" + card.state}\n              onClick={() => toggleCardState(index)}\n            >\n              {!isGuessed(card) && (\n                <>\n                  <span className=\"player-north\">{card.word}</span>\n                  <span className=\"player-south\">{card.word}</span>\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  background: url(${process.env.PUBLIC_URL}/codenames/wooden-table-bg.jpg);\n  background-position: center;\n  background-size: cover;\n  min-height: 100vh;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 600px;\n    @media screen and (max-height: 600px) {\n      height: 90vh;\n    }\n  }\n  .turn-counter {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    transform: rotateZ(-90deg);\n    background: rgba(255, 255, 255, 0.3);\n    padding: 8px;\n    width: 250px;\n    span {\n      font-size: 40px;\n      text-align: center;\n    }\n    .buttons {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 10px;\n      button {\n        height: 80px;\n        width: 80px;\n        border-radius: 8px;\n        border: 0;\n        background: #111;\n        color: white;\n        font-size: 30px;\n      }\n    }\n  }\n  .board {\n    display: flex;\n    flex-wrap: wrap;\n    width: 800px;\n    height: 100%;\n    .word {\n      font-size: 22px;\n      @media screen and (max-height: 600px) {\n        font-size: 16px;\n      }\n      font-weight: 400;\n      position: relative;\n      background: linear-gradient(${sand} 50%, #fff 50%);\n      border: 1px solid black;\n      border-radius: 8px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-around;\n      align-items: center;\n      flex: 1 0 16%;\n      margin: 5px;\n      user-select: none;\n      overflow: hidden;\n      span {\n        &.player-north {\n          transform: rotateZ(180deg);\n          font-style: italic;\n        }\n      }\n      &.guessed {\n        span {\n          display: none;\n        }\n        &.spy::before {\n          background: center url(${process.env.PUBLIC_URL}/codenames/spy.png);\n          background-size: contain;\n        }\n        &.bystander::before {\n          background: bottom\n            url(${process.env.PUBLIC_URL}/codenames/bystander.png);\n\n          background-size: 45%;\n        }\n        &.spy::before,\n        &.bystander::before {\n          opacity: 0.5;\n          background-repeat: no-repeat;\n          content: \"\";\n          display: block;\n          height: 100%;\n          width: 100%;\n        }\n\n        &.green {\n          background: ${green_gradient};\n        }\n        &.red {\n          background: ${red};\n        }\n        &.blue {\n          background: ${blue};\n        }\n        &.bystander {\n          background: ${sand};\n        }\n      }\n      &.north::before,\n      &.south::before,\n      &.both::before {\n        position: absolute;\n        font-size: 28px;\n        font-weight: 500;\n      }\n      &.north::before {\n        content: \"↑\";\n      }\n      &.south::before {\n        content: \"↓\";\n      }\n      &.both::before {\n        content: \"↑↓\";\n      }\n    }\n  }\n`;\n","export enum KeyState {\n  BYSTANDER = \"BYSTANDER\",\n  ASSASSIN = \"ASSASSIN\",\n  SPY = \"SPY\",\n  RED = \"RED\",\n  BLUE = \"BLUE\",\n}\n\nfunction shuffle(a: any[]) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nconst countKeyCards = (keyCard: KeyState[], type: string) => {\n  let count = 0;\n  keyCard.forEach((key: any) => {\n    if (key === type) count++;\n  });\n  return count;\n};\n\nconst randomPosition = () => Math.floor(Math.random() * 25) + 1;\n\nconst createRandomDuetKeys = () => {\n  const [a, b] = [\n    Array(25).fill(KeyState.BYSTANDER),\n    Array(25).fill(KeyState.BYSTANDER),\n  ];\n  const settings = {\n    counts: {\n      spy: 9,\n      spyOverlap: 3,\n      bystander: 9,\n      assasin: 3,\n    },\n  };\n  /* KEYCARD A */\n  // Create spies\n  while (countKeyCards(a, KeyState.SPY) < settings.counts.spy) {\n    const randomPos = randomPosition();\n    if (a[randomPos] === KeyState.BYSTANDER) {\n      a[randomPos] = KeyState.SPY;\n    }\n  }\n\n  // Create assasins\n  while (countKeyCards(a, KeyState.ASSASSIN) < settings.counts.assasin) {\n    const randomPos = randomPosition();\n    if (a[randomPos] === KeyState.BYSTANDER) {\n      a[randomPos] = KeyState.ASSASSIN;\n    }\n  }\n\n  /* KEYCARD B */\n  // Create non-overlapping spies\n  while (\n    countKeyCards(b, KeyState.SPY) <\n    settings.counts.spy - settings.counts.spyOverlap\n  ) {\n    const randomPos = randomPosition();\n    if (b[randomPos] === KeyState.BYSTANDER && a[randomPos] !== KeyState.SPY) {\n      b[randomPos] = KeyState.SPY;\n    }\n  }\n\n  // Create overlapping spies\n  while (countKeyCards(b, KeyState.SPY) < settings.counts.spy) {\n    const randomPos = randomPosition();\n    if (b[randomPos] === KeyState.BYSTANDER && a[randomPos] === KeyState.SPY) {\n      b[randomPos] = KeyState.SPY;\n    }\n  }\n\n  // Create assasins (non-overlapping)\n  while (countKeyCards(b, KeyState.ASSASSIN) < settings.counts.assasin) {\n    const randomPos = randomPosition();\n    if (\n      b[randomPos] === KeyState.BYSTANDER &&\n      a[randomPos] !== KeyState.ASSASSIN\n    ) {\n      b[randomPos] = KeyState.ASSASSIN;\n    }\n  }\n\n  return [\n    a,\n    b.reverse(), // Player b sits on the opposite side of the table\n  ];\n};\n\nconst createRandomStandardKeys = () => {\n  const [redCount, blueCount] = shuffle([8, 9]);\n  const bystanderCount = 25 - 8 - 9 - 1; // 7\n  const assasinCount = 1;\n  if (redCount > blueCount) {\n    alert(\"Red goes first\");\n  } else {\n    alert(\"Blue goes first\");\n  }\n  const keys = [\n    ...Array(redCount).fill(KeyState.RED),\n    ...Array(blueCount).fill(KeyState.BLUE),\n    ...Array(bystanderCount).fill(KeyState.BYSTANDER),\n    ...Array(assasinCount).fill(KeyState.ASSASSIN),\n  ];\n  return shuffle(keys);\n};\n\nexport const getKeys = (gameId: string, version: string): any => {\n  if (version === \"standard\") {\n    return [createRandomStandardKeys(), \"\"];\n  } else if (version === \"duet\") {\n    const [a, b] = createRandomDuetKeys();\n    let url = window.location.href + \"/\";\n    url += btoa(JSON.stringify(b));\n    return [a, url];\n  } else {\n    return null;\n  }\n};\n\n// export const validateKeys = () => {\n//   const keys = data[\"duet\"];\n//   Object.keys(keys).forEach((key) => {\n//     const game = keys[key];\n//     let spies = 0;\n//     let bystanders = 0;\n//     let assasins = 0;\n//     game.forEach((cell: any) => {\n//       switch (cell) {\n//         case KeyState.SPY:\n//           spies++;\n//           break;\n//         case KeyState.BYSTANDER:\n//           bystanders++;\n//           break;\n//         case KeyState.ASSASSIN:\n//           assasins++;\n//           break;\n//         default:\n//           break;\n//       }\n//     });\n//     if (spies === 9 && assasins === 3 && bystanders === 13) {\n//       // Everything OK!\n//     } else {\n//       alert(`Error in game ${key}. Check console output.`);\n//       console.log(`Game ${key} is invalid`);\n//       console.log(`Spies: ${spies}`);\n//       console.log(`Bystanders: ${bystanders}`);\n//       console.log(`Assasins: ${assasins}\\n`);\n//     }\n//   });\n// };\n\n// const printKeyCard = (keys: KeyState[]) => {\n//   let temp = \"\";\n//   for (let i = 0; i < 25; i++) {\n//     if (i % 5 === 0) {\n//       console.log(temp);\n//       temp = \"\";\n//     }\n//     temp += KeyState[keys[i]].substr(0, 3) + \"\\t\";\n//   }\n//   console.log(temp);\n// };\n\n// const printCommonSpies = (a: KeyState[], b: KeyState[]) => {\n//   let count = 0;\n//   a.forEach((key) => {\n//     if (key === KeyState.SPY) count++;\n//   });\n//   b.forEach((key, index) => {\n//     if (key === KeyState.SPY && a[index] !== KeyState.SPY) {\n//       count++;\n//     }\n//   });\n//   console.log(count);\n// };\n\n// const printOverlappingSpies = (a: KeyState[], b: KeyState[]) => {\n//   let count = 0;\n//   a.forEach((key, index) => {\n//     if (key === KeyState.SPY && b[index] === KeyState.SPY) count++;\n//   });\n//   console.log(count);\n// };\n","import styled from \"@emotion/styled\";\nimport copy from \"copy-to-clipboard\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { blue, green_gradient, red, sand } from \"../util/colors\";\nimport { getKeys, KeyState } from \"./util/keys\";\n\nexport default function KeyCard() {\n  const { version, preset } = useParams<any>();\n  const [keys, setKeys] = useState<KeyState[]>([]);\n  const [gameId] = useState(\"\");\n  const [urlForFriend, setUrlForFriend] = useState(\"\");\n  const [hideUrl, setHideUrl] = useState(false);\n\n  useEffect(() => {\n    if (preset) {\n      let data = JSON.parse(atob(preset));\n      setKeys(data);\n    }\n  }, [preset]);\n\n  const resetGame = (e: any) => {\n    e.preventDefault();\n    const [generatedKeys, url] = getKeys(gameId, version);\n    if (!generatedKeys) return;\n    if (url) setUrlForFriend(url);\n    setKeys(generatedKeys);\n    setHideUrl(false);\n  };\n\n  const handleCopy = () => {\n    copy(urlForFriend);\n    setHideUrl(true);\n  };\n\n  return (\n    <StyledPage>\n      {!hideUrl && urlForFriend && (\n        <div\n          className=\"url-share\"\n          style={{ width: \"100%\", wordBreak: \"break-all\" }}\n        >\n          <span>{urlForFriend}</span>\n          <button onClick={handleCopy}>Copy</button>\n        </div>\n      )}\n\n      <div className=\"is-started\">\n        <button id=\"newGame\" onClick={resetGame}>\n          Nyt spil\n        </button>\n        <div className=\"keys\">\n          {keys.map((key) => (\n            <div className={\"key \" + key} />\n          ))}\n        </div>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  min-height: 100vh;\n  padding: 20px;\n  background: url(${process.env.PUBLIC_URL}/codenames/wooden-table-bg.jpg);\n\n  button {\n    background: white;\n    border: 0;\n    border: 1px solid black;\n    padding: 12px;\n  }\n\n  .url-share {\n    margin-bottom: 20px;\n    span {\n      display: block;\n      background: white;\n    }\n    button {\n      height: 50px;\n      width: 100%;\n    }\n  }\n\n  button#newGame {\n    margin-bottom: 20px;\n  }\n  form {\n    input {\n      margin-bottom: 20px;\n      height: 40px;\n    }\n  }\n  .keys {\n    @media all and (orientation: landscape) {\n      width: 90vh;\n      height: 70vh;\n    }\n    @media all and (orientation: portrait) {\n      width: 90vw;\n      height: 70vw;\n    }\n\n    display: flex;\n    flex-wrap: wrap;\n    .key {\n      flex: 1 0 18%;\n      border: 1px solid black;\n      margin: 0.5%;\n      border-radius: 8px;\n      &.BYSTANDER {\n        background: ${sand};\n      }\n      &.ASSASSIN {\n        background: black;\n      }\n      &.SPY {\n        background: ${green_gradient};\n      }\n      &.RED {\n        background: ${red};\n      }\n      &.BLUE {\n        background: ${blue};\n      }\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { red } from \"./util/colors\";\n\nexport default function Codenames() {\n  const [language, setLanguage] = useState(\"da\");\n  const [version, setVersion] = useState(\"standard\");\n\n  return (\n    <StyledPage>\n      <h1>Settings</h1>\n      <div className=\"columns\">\n        <div className=\"col options\">\n          <h2>Language</h2>\n          <div\n            className={\"option\" + (language === \"da\" ? \" active\" : \"\")}\n            onClick={() => setLanguage(\"da\")}\n          >\n            Danish\n          </div>\n          <div\n            className={\"option\" + (language === \"en\" ? \" active\" : \"\")}\n            onClick={() => setLanguage(\"en\")}\n          >\n            English\n          </div>\n        </div>\n        <div className=\"col options\">\n          <h2>Version</h2>\n          <div\n            className={\"option\" + (version === \"standard\" ? \" active\" : \"\")}\n            onClick={() => setVersion(\"standard\")}\n          >\n            Standard\n          </div>\n          <div\n            className={\"option\" + (version === \"duet\" ? \" active\" : \"\")}\n            onClick={() => setVersion(\"duet\")}\n          >\n            Duet\n          </div>\n        </div>\n      </div>\n      <h1>Game</h1>\n      <div className=\"columns\">\n        <div className=\"col\">\n          <h2>Tools</h2>\n          <Link to={`/codenames/keycard/${version}`}>KeyCard</Link>\n        </div>\n        <div className=\"col\">\n          <h2>Board</h2>\n          <Link to={`/codenames/game/${version}/${language}/default`}>\n            Standard\n          </Link>\n          <Link to={`/codenames/game/${version}/${language}/deep`}>\n            Deep Undercover\n          </Link>\n        </div>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  padding-top: 40px;\n  background: center url(${process.env.PUBLIC_URL}/codenames/bg.jpeg);\n  background-size: cover;\n  min-height: 100vh;\n  h1 {\n    font-size: 50px;\n    margin: 10px;\n    text-align: center;\n    color: white;\n    -webkit-text-stroke: 1px black;\n  }\n  @media screen and (max-width: 750px) {\n    width: 100%;\n    padding-right: 16px;\n    padding-left: 16px;\n  }\n  .columns {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    background: rgba(0, 0, 0, 0.75);\n    max-width: 800px;\n    margin: 0 auto;\n    margin-bottom: 20px;\n  }\n  .col {\n    padding: 0 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    font-weight: 300;\n    h2 {\n      text-align: center;\n      color: white;\n      font-weight: 400;\n    }\n    a,\n    .option {\n      background: radial-gradient(rgb(25, 25, 25), rgb(0, 0, 0));\n      border-radius: 8px;\n      margin-bottom: 20px;\n      color: white;\n      text-decoration: none;\n      font-size: 20px;\n      padding: 30px;\n      text-align: center;\n      user-select: none;\n      cursor: pointer;\n    }\n  }\n  .options {\n    padding-right: 20px;\n    .option {\n      &.active {\n        color: ${red};\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Codenames from \"./Game\";\nimport KeyCard from \"./KeyCard\";\nimport Home from \".\";\n\nexport default function CodenamesRouter() {\n  return (\n    <>\n      <Route path={\"/codenames/keycard/:version/:preset?\"}>\n        <KeyCard />\n      </Route>\n      <Route path={\"/codenames/game/:version/:language/:cardset\"}>\n        <Codenames />\n      </Route>\n      <Route exact path={\"/codenames\"}>\n        <Home />\n      </Route>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport KingOfNewYork from \"./pages/KingOfNewYork\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport StarRealms from \"./pages/StarRealms\";\nimport Munchkin from \"./pages/Munchkin\";\nimport ForSale from \"./pages/ForSale\";\nimport CodenamesRouter from \"./pages/Codenames/router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <CodenamesRouter />\n      <Route path={\"/for-sale\"}>\n        <ForSale />\n      </Route>\n      <Route path={\"/munchkin\"}>\n        <Munchkin />\n      </Route>\n      <Route path={\"/star-realms\"}>\n        <StarRealms />\n      </Route>\n      <Route path={\"/king-of-new-york\"}>\n        <KingOfNewYork />\n      </Route>\n      <Route exact path={\"/\"}>\n        <Home />\n      </Route>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
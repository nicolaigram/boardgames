{"version":3,"sources":["serviceWorker.ts","components/DiceIcon/index.tsx","pages/KingOfNewYork/index.tsx","pages/Home/index.tsx","pages/StarRealms/PlayersPrompt.tsx","pages/StarRealms/index.tsx","pages/Munchkin/index.tsx","pages/ForSale/Card.tsx","pages/ForSale/Board/BuyPhase.tsx","pages/ForSale/Board/SellPhase.tsx","pages/ForSale/Board/index.tsx","pages/ForSale/Player.tsx","pages/ForSale/Bidding.tsx","pages/ForSale/Hand.tsx","pages/ForSale/index.tsx","pages/Codenames/util/cards.ts","pages/Codenames/util/colors.tsx","pages/Codenames/Game/Timer.tsx","pages/Codenames/Game/index.tsx","pages/Codenames/KeyCard/util/keys.ts","pages/Codenames/KeyCard/index.tsx","pages/Codenames/index.tsx","pages/Codenames/router.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","DiceIcon","name","amount","rule","url","RuleContainer","Array","fill","map","_","index","src","alt","style","marginRight","height","width","styled","div","KingOfNewYork","Background","Overlay","Flex","Home","StyledPage","to","PlayersPrompt","display","setPlayerCount","StyledPrompt","onClick","StarRealms","useState","startHp","players","setPlayers","showDialog","setShowDialog","sound","Audio","setHp","playerIndex","play","copy","newHp","hp","marginBottom","PlayersContainer","player","Player","HealthBar","percentage","paddingTop","count","newPlayers","i","push","props","Munchkin","colors","changePlayerStat","stat","value","editingName","level","strength","gender","Page","color","placeholder","className","onChange","e","target","changeGender","process","Card","card","selected","type","StyledCard","padValue","id","newId","toString","length","BuyPhase","table","pass","currentBid","SellPhase","money","Board","isStarted","phase","updateName","setName","useEffect","onSubmit","preventDefault","Bidding","socket","setCurrentBid","on","changeBid","c","isDisabled","disabled","emit","Hand","selectedCard","setSelectedCard","console","log","StyledHand","cards","handleSelect","ENDPOINT","horn","setSocket","setPlayer","setTable","info","setInfo","setIsStarted","isBoard","setIsBoard","setPhase","socketIOClient","reload","playersResponse","msg","data","justifyContent","CardState","words","default","require","deep","createCards","language","version","shuffledWords","a","j","x","Math","floor","random","shuffle","word","state","getNextCardState","standard","currentState","guessedBlue","guessedRed","guessedBystander","duet","guessedGreen","bystanderNorth","bystanderSouth","bystanderBoth","green_gradient","red","Timer","timeLeft","setTimeLeft","isActive","setIsActive","setTimeout","TimerStyled","p","Codenames","useParams","cardset","setCards","turn","setTurn","temp","toggleCardState","isGuessed","KeyState","countKeyCards","keyCard","forEach","key","randomPosition","createRandomStandardKeys","redCount","blueCount","alert","RED","BLUE","BYSTANDER","ASSASSIN","getKeys","gameId","b","settings","spy","spyOverlap","bystander","assasin","SPY","randomPos","reverse","createRandomDuetKeys","href","btoa","JSON","stringify","KeyCard","preset","keys","setKeys","urlForFriend","setUrlForFriend","hideUrl","setHideUrl","parse","atob","wordBreak","generatedKeys","setLanguage","setVersion","CodenamesRouter","path","exact","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1bc91054.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nexport default function DiceIcon({\n  name,\n  amount,\n  rule,\n}: {\n  name: string;\n  amount: number;\n  rule: string;\n}) {\n  const url = \"/boardgames/dice/\" + name;\n  const size = 50;\n  return (\n    <RuleContainer>\n      {Array(amount)\n        .fill(0)\n        .map((_: any, index: any) => (\n          <img\n            src={url}\n            alt={name}\n            style={{ marginRight: \"10px\" }}\n            height={size}\n            width={size}\n          />\n        ))}\n      <p>{rule}</p>\n    </RuleContainer>\n  );\n}\n\nconst RuleContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport DiceIcon from \"../../components/DiceIcon\";\nimport styled from \"@emotion/styled\";\n\nexport default function KingOfNewYork() {\n  return (\n    <Background>\n      <Overlay>\n        <Flex>\n          <DiceIcon name=\"01_heart.png\" amount={1} rule=\"Heal x\" />\n          <DiceIcon name=\"01_heart.png\" amount={3} rule=\"Take power-up card\" />\n        </Flex>\n        <DiceIcon\n          name=\"02_destroy.png\"\n          amount={1}\n          rule=\"Damage x to buildings or units\"\n        />\n        <DiceIcon name=\"03_energy.png\" amount={1} rule=\"Take x energy\" />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={1}\n          rule=\"Units in your borough you damage you\"\n        />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={2}\n          rule=\"+ other monsters in your borough\"\n        />\n        <DiceIcon\n          name=\"04_skull.png\"\n          amount={3}\n          rule=\"All units damage all monsters + take the Statue of Liberty\"\n        />\n        <Flex>\n          <DiceIcon name=\"05_claw.png\" amount={1} rule=\"Do x damage\" />\n          <DiceIcon\n            name=\"05_claw.png\"\n            amount={4}\n            rule=\"Berserk (if using expansion)\"\n          />\n        </Flex>\n\n        <Flex>\n          <DiceIcon name=\"06_star.png\" amount={1} rule=\"Nothing*\" />\n          <DiceIcon name=\"06_star.png\" amount={3} rule=\"Take Superstar card\" />\n        </Flex>\n\n        <div>\n          <p>*If you have the Superstar card; x victory points</p>\n        </div>\n      </Overlay>\n    </Background>\n  );\n}\n\nconst Background = styled.div`\n  height: 100vh;\n  width: 100vw;\n  overflow: auto;\n\n  &::before {\n    background-image: url(\"/boardgames/bg.png\");\n    background-position: center;\n    background-size: cover;\n    width: 100%;\n    height: 100%;\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    filter: brightness(50%);\n  }\n`;\n\nconst Overlay = styled.div`\n  padding: 25px;\n  background: rgba(255, 255, 255, 0.8);\n  margin: 0 50px;\n  margin-top: 50px;\n  border-radius: 20px;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  div {\n    margin-right: 10px;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <StyledPage>\n      <Link to={\"/king-of-new-york\"}>King of New York</Link>\n      <Link to={\"/star-realms\"}>Star Realms</Link>\n      <Link to={\"/munchkin\"}>Munchkin</Link>\n      <Link to={\"/codenames\"}>Codenames</Link>\n      <Link to={\"/for-sale\"}>For Sale</Link>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 100px 20px 0;\n  min-height: 100vh;\n  background-image: url(/boardgames/main-bg.gif);\n  background-position: center;\n  background-size: cover;\n  a {\n    --link-color: rgba(255, 255, 255, 0.3);\n    --link-color-hover: rgba(255, 255, 255, 0.7);\n    --link-text-color: black;\n    padding: 12px;\n    border-radius: 8px;\n    font-size: 32px;\n    background-color: var(--link-color);\n    color: var(--link-text-color);\n    text-decoration: none;\n    margin-bottom: 16px;\n    text-align: center;\n    white-space: nowrap;\n    overflow: hidden;\n    &:hover {\n      background-color: var(--link-color-hover);\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport default function PlayersPrompt({ display, setPlayerCount }: any) {\n  if (!display) return null;\n  return (\n    <StyledPrompt>\n      <p>How many players?</p>\n      <div>\n        <button onClick={() => setPlayerCount(2)}>2</button>\n        <button onClick={() => setPlayerCount(3)}>3</button>\n        <button onClick={() => setPlayerCount(4)}>4</button>\n      </div>\n    </StyledPrompt>\n  );\n}\n\nconst StyledPrompt = styled.div`\n  position: fixed;\n  background: rgba(255, 255, 255, 0.9);\n  height: 90vh;\n  width: 80vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-size: 30px;\n  button {\n    height: 80px;\n    width: 100px;\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { create } from \"domain\";\nimport React, { useState } from \"react\";\nimport { start } from \"repl\";\nimport LaserShot from \"./LaserShot\";\nimport PlayersPrompt from \"./PlayersPrompt\";\n\ninterface Player {\n  hp: number;\n}\n\nexport default function StarRealms() {\n  const [startHp, setStartHp] = useState(50);\n  const createPlayer = (): Player => ({ hp: startHp });\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [showDialog, setShowDialog] = useState(\"player-count\");\n\n  const setPlayerCount = (count: number) => {\n    const newPlayers = [];\n    for (let i = 0; i < count; i++) {\n      newPlayers.push(createPlayer());\n    }\n    setPlayers(newPlayers);\n    setShowDialog(\"\");\n  };\n\n  const sound = new Audio(\"/boardgames/star-realms/laser_shot.mp3\");\n\n  const setHp = (playerIndex: number, amount: number) => {\n    if (amount < 0) {\n      sound.play();\n    }\n    const copy = [...players];\n    const currentHp = copy[playerIndex].hp;\n    let newHp = currentHp + amount;\n    if (newHp < 0) newHp = 0;\n    copy[playerIndex].hp = newHp;\n    setPlayers(copy);\n  };\n\n  const resetGame = () => {\n    setPlayers([]);\n    setShowDialog(\"player-count\");\n  };\n\n  return (\n    <StyledPage>\n      {showDialog !== \"player-count\" && (\n        <button onClick={resetGame} style={{ marginBottom: \"20px\" }}>\n          Reset game\n        </button>\n      )}\n      <PlayersContainer>\n        {players.map((player, index) => (\n          <Player>\n            <HealthBar percentage={(player.hp / startHp) * 100}>\n              <span>{player.hp}</span>\n            </HealthBar>\n            {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <p>{\"Player \" + (index + 1)}</p>\n            </div> */}\n            <div style={{ paddingTop: \"16px\" }}>\n              <button onClick={() => setHp(index, -5)}>-5</button>\n              <button onClick={() => setHp(index, -1)}>-1</button>\n              <button onClick={() => setHp(index, 1)}>+1</button>\n              <button onClick={() => setHp(index, 5)}>+5</button>\n            </div>\n          </Player>\n        ))}\n      </PlayersContainer>\n      <PlayersPrompt\n        display={showDialog === \"player-count\"}\n        setPlayerCount={setPlayerCount}\n      />\n    </StyledPage>\n  );\n}\n\nfunction getPlayerColor(percentage: number) {\n  if (percentage <= 0) return \"#333\";\n  if (percentage <= 25) return \"#B81D13\";\n  if (percentage <= 50) return \"#EFB700\";\n  return \"#008450\";\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  min-height: 100vh;\n  background: url(\"/boardgames/star-realms/star-wars-backgrounds-14.jpg\");\n  animation: 10s bg alternate infinite;\n  background-position: center;\n  @keyframes bg {\n    0% {\n      background-size: 100%;\n    }\n    100% {\n      background-size: 120%;\n    }\n  }\n`;\n\nconst PlayersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Player = styled.div`\n  border: 1px solid black;\n  overflow: hidden;\n  padding: 16px;\n  font-size: 30px;\n  background-color: #eee;\n  margin-bottom: 20px;\n  opacity: 0.9;\n  border-radius: 20px;\n  border: 10px solid #333;\n  p {\n    margin: 0 0 10px;\n  }\n  button {\n    height: 80px;\n    width: 100px;\n    font-size: 24px;\n    border: 0;\n    background-color: #ccc;\n    &:not(:last-of-type) {\n      margin-right: 10px;\n    }\n  }\n`;\n\nconst HealthBar: any = styled.div`\n  height: 60px;\n  width: calc(100% + 32px);\n  background: black;\n  margin-left: -16px;\n  margin-top: -16px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    position: absolute;\n    color: white;\n  }\n  &::after {\n    content: \"\";\n    background: ${(props: any) => getPlayerColor(props.percentage)};\n    display: block;\n    height: 100%;\n    width: ${(props: any) => props.percentage + \"%\"};\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { env } from \"process\";\nimport React, { useState } from \"react\";\n\ninterface Player {\n  name: string;\n  editingName: boolean;\n  level: number;\n  strength: number;\n  gender: string;\n}\n\nexport default function Munchkin() {\n  const [startHp, setStartHp] = useState(50);\n\n  const colors = [\n    \"#915A9A\", // Purple\n    \"#F2CA4C\", // Yellow\n    \"#CD2026\", // Red\n    \"#369541\", // Green,\n    \"#596DAD\", // Blue\n  ];\n\n  const createPlayer = (): Player => ({\n    name: \"\",\n    editingName: true,\n    level: 0,\n    strength: 0,\n    gender: \"male\",\n  });\n\n  const changePlayerStat = (\n    playerIndex: number,\n    stat: keyof Player,\n    value: any\n  ) => {\n    const copy: any = [...players];\n    copy[playerIndex][stat] = value;\n    setPlayers(copy);\n  };\n\n  const changeGender = (playerIndex: number) => {\n    const player = players[playerIndex];\n    changePlayerStat(\n      playerIndex,\n      \"gender\",\n      player.gender === \"male\" ? \"female\" : \"male\"\n    );\n  };\n\n  const addPlayer = () => {\n    setPlayers([...players, createPlayer()]);\n  };\n\n  const [players, setPlayers] = useState<Player[]>([createPlayer()]);\n\n  return (\n    <Page>\n      <PlayersContainer>\n        {players.map((player, index) => (\n          <Player color={colors[index]}>\n            {!player.editingName ? (\n              <>\n                <div>\n                  <span>{player.name || \"Unnamed\"}</span>\n                </div>\n                <button\n                  onClick={() => changePlayerStat(index, \"editingName\", true)}\n                >\n                  Edit name\n                </button>\n              </>\n            ) : (\n              <>\n                <input\n                  value={player.name}\n                  placeholder=\"Enter name\"\n                  className=\"player-name\"\n                  onChange={(e) =>\n                    changePlayerStat(index, \"name\", e.target.value)\n                  }\n                />\n                <button\n                  onClick={() => changePlayerStat(index, \"editingName\", false)}\n                >\n                  Confirm\n                </button>\n              </>\n            )}\n\n            <div\n              className=\"player-img-container\"\n              onClick={() => changeGender(index)}\n            >\n              <img\n                className=\"player-img\"\n                src={\n                  process.env.PUBLIC_URL + \"/munchkin/\" + player.gender + \".png\"\n                }\n                alt={\"munchkin-\" + player.gender}\n              />\n            </div>\n            <div className=\"stats\">\n              <div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"level\", player.level + 1)\n                  }\n                >\n                  {\"\\u2191\"}\n                </button>\n                <div>{player.level}</div>\n                <div>Level</div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"level\", player.level - 1)\n                  }\n                >\n                  {\"\\u2193\"}\n                </button>\n              </div>\n              <div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"strength\", player.strength + 1)\n                  }\n                >\n                  {\"\\u2191\"}\n                </button>\n                <div>{player.strength}</div>\n                <div>Strength</div>\n                <button\n                  onClick={() =>\n                    changePlayerStat(index, \"strength\", player.strength - 1)\n                  }\n                >\n                  {\"\\u2193\"}\n                </button>\n              </div>\n            </div>\n          </Player>\n        ))}\n        <button onClick={addPlayer}>Add player</button>\n      </PlayersContainer>\n    </Page>\n  );\n}\n\nconst Page = styled.div`\n  @import url(\"https://fonts.googleapis.com/css2?family=Grenze+Gotisch:wght@200;400&display=swap\");\n  padding: 20px;\n  min-height: 100vh;\n  background-color: #ffe5cc;\n  * {\n    font-family: \"Grenze Gotisch\", cursive;\n    font-size: 22px;\n  }\n`;\n\nconst PlayersContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Player: any = styled.div`\n  padding: 20px;\n  border: 1px solid black;\n  border-radius: 6px;\n  box-shadow: 0px 3px 3px #ccc;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  width: 200px;\n  background-color: #fff2e6;\n  .player-img-container {\n    padding: 8px;\n    display: flex;\n    justify-content: center;\n    border-radius: 10px;\n    background-color: ${(props) => props.color};\n  }\n  .player-img {\n    height: 100px;\n  }\n  .player-name {\n    width: 100%;\n  }\n  .stats {\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    div {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      div {\n        &:first-of-type {\n          padding-top: 4px;\n        }\n        padding-bottom: 4px;\n      }\n      button {\n        height: 40px;\n        width: 40px;\n        font-size: 20px;\n      }\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\n\nexport default function Card({\n  card,\n  selected,\n  onClick,\n  type,\n}: {\n  card: { name: string; value: number };\n  selected?: boolean;\n  onClick?: any;\n  type?: string;\n}) {\n  const handleClick = () => {\n    if (onClick) onClick();\n  };\n\n  const imgPath = () => {\n    if (type === \"cheques\") {\n      return `${process.env.PUBLIC_URL}/for-sale/cheques/tile${padValue(\n        card.value\n      )}.png`;\n    }\n    return `${process.env.PUBLIC_URL}/for-sale/homes/tile${padValue(\n      card.value\n    )}.png`;\n  };\n\n  return (\n    <StyledCard className={selected ? \"selected\" : \"\"} onClick={handleClick}>\n      <img src={imgPath()} alt=\"\" />\n    </StyledCard>\n  );\n}\n\nconst padValue = (id: number) => {\n  let newId = id.toString();\n  if (newId.length === 1) return \"00\" + id;\n  if (newId.length === 2) return \"0\" + id;\n  return id;\n};\n\nconst StyledCard: any = styled.div`\n  flex: 0 1 48%;\n  border: 1px solid black;\n  margin-bottom: 10px;\n  background: white;\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 3px 3px 3px #ccc;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  p {\n    text-align: center;\n  }\n  img {\n    height: 100%;\n    width: 100%;\n  }\n  &.selected {\n    filter: brightness(50%);\n  }\n`;\n","import React from \"react\";\nimport Card from \"../Card\";\n\nexport default function BuyPhase({ table, players }: any) {\n  return (\n    <>\n      <h1>Buying Phase</h1>\n      <div className=\"cards island\">\n        {table.map((card: any) => (\n          <Card card={card} />\n        ))}\n      </div>\n      <div>\n        <table>\n          <thead>\n            <th>NAME</th>\n            {/* <th>Money</th> */}\n            <th>BID</th>\n            {/* <th>Pass</th> */}\n          </thead>\n          <tbody>\n            {players.map((player: any) => (\n              <tr className={player.pass ? \"pass\" : \"\"}>\n                <td>{player.name}</td>\n                {/* <td>{player.money}</td> */}\n                <td>{player.currentBid}</td>\n                {/* <td>{player.pass.toString()}</td> */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Card from \"../Card\";\n\nexport default function SellPhase({ table, players }: any) {\n  return (\n    <>\n      <h1>Selling Phase</h1>\n      <div className=\"cards island\">\n        {table.map((card: any) => (\n          <Card card={card} type=\"cheques\" />\n        ))}\n      </div>\n      <table>\n        <thead>\n          <th>NAME</th>\n          <th>MONEY</th>\n        </thead>\n        <tbody>\n          {players.map((player: any) => (\n            <tr className={player.pass ? \"pass\" : \"\"}>\n              <td>{player.name}</td>\n              <td>{player.money}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport Card from \"../Card\";\nimport BuyPhase from \"./BuyPhase\";\nimport SellPhase from \"./SellPhase\";\n\nexport default function Board({ isStarted, players, table, phase }: any) {\n  if (!isStarted) return <h1>Waiting to start</h1>;\n  return (\n    <StyledPage>\n      <div className=\"container\">\n        {phase === \"buying houses\" && (\n          <BuyPhase players={players} table={table} />\n        )}\n        {phase === \"selling houses\" && (\n          <SellPhase players={players} table={table} />\n        )}\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  background-color: #b5d3e7;\n  min-height: 100vh;\n  padding-top: 20px;\n  .container {\n    max-width: 600px;\n    margin: 0 auto;\n  }\n  .cards {\n    display: flex;\n    justify-content: space-between;\n    /* flex-wrap: wrap; */\n  }\n  table {\n    width: 100%;\n    * {\n      font-size: 30px;\n    }\n    tr.pass {\n      * {\n        text-decoration: line-through;\n      }\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Player({ updateName, player }: any) {\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    setName(player.name);\n  }, [player]);\n\n  const handleNameChange = (e: any) => {\n    e.preventDefault();\n    updateName(name);\n  };\n\n  return (\n    <StyledPage className=\"island\">\n      <form onSubmit={handleNameChange}>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        {name !== player.name && <button id=\"set-name\">Set name</button>}\n      </form>\n      <div className=\"money\">\n        <span>{player.money}.000$</span>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  input,\n  button {\n    height: 60px;\n    width: 100%;\n    text-align: center;\n  }\n  .money {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n    color: green;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Bidding({ socket, player }: any) {\n  const [currentBid, setCurrentBid] = useState(0);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on(\"reset-bids\", () => {\n      setCurrentBid(0);\n    });\n  }, []);\n\n  const sendBid = () => {\n    socket.emit(\"bid\", currentBid);\n  };\n\n  const changeBid = (type: any) => {\n    if (type === \"increase\") {\n      setCurrentBid((c) => {\n        if (c < player.money) {\n          return c + 1;\n        } else {\n          return c;\n        }\n      });\n    } else {\n      setCurrentBid((c) => {\n        if (c > 0) {\n          return c - 1;\n        } else {\n          return c;\n        }\n      });\n    }\n  };\n\n  const isDisabled = () => {\n    return player.pass;\n  };\n\n  return (\n    <StyledPage className=\"island\">\n      {!isDisabled() && (\n        <p>Current bid: {currentBid === 0 ? \"--\" : currentBid + \".000$\"}</p>\n      )}\n      {isDisabled() && (\n        <>\n          <p>You passed.</p> <p>Wait for the next round</p>\n        </>\n      )}\n      <div className=\"buttons\">\n        <button\n          onClick={() => changeBid(\"increase\")}\n          id=\"up\"\n          disabled={isDisabled()}\n        >\n          UP\n        </button>\n\n        <button onClick={sendBid} id=\"bid\" disabled={isDisabled()}>\n          BID\n        </button>\n\n        <button\n          onClick={() => changeBid(\"decrease\")}\n          id=\"down\"\n          disabled={isDisabled()}\n        >\n          DOWN\n        </button>\n\n        <button\n          onClick={() => socket.emit(\"pass\")}\n          id=\"pass\"\n          disabled={isDisabled()}\n        >\n          PASS\n        </button>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  .buttons {\n    justify-content: space-between;\n    display: flex;\n    flex-wrap: wrap;\n    button {\n      height: 60px;\n      flex: 0 0 48%;\n      margin-bottom: 10px;\n      background: rgba(255, 255, 255, 0.8);\n      border: 0;\n      border-radius: 8px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\n\nexport default function Hand({ player, socket }: any) {\n  const [selectedCard, setSelectedCard] = useState(-1);\n  const handleSelect = (card: any) => {\n    setSelectedCard(card.id);\n    socket.emit(\"select-card\", card);\n  };\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on(\"reset-cards\", () => {\n      console.log(\"resetting cards\");\n      setSelectedCard(-1);\n    });\n  }, []);\n\n  return (\n    <StyledHand className=\"island\">\n      {player.cards.map((card: any) => (\n        <Card\n          card={card}\n          selected={selectedCard === card.id}\n          onClick={() => handleSelect(card)}\n        />\n      ))}\n    </StyledHand>\n  );\n}\n\nconst StyledHand = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Board from \"./Board\";\nimport Player from \"./Player\";\nimport Bidding from \"./Bidding\";\nimport Hand from \"./Hand\";\nconst ENDPOINT = \"https://192.168.8.105:4001\";\nconst horn = new Audio(process.env.PUBLIC_URL + \"/for-sale/party_horn.mp3\");\n\nexport default function Home() {\n  const [socket, setSocket] = useState<any>(null);\n  const [player, setPlayer] = useState({ id: \"\", money: 0, cards: [] });\n  const [players, setPlayers] = useState([]);\n  const [table, setTable] = useState([]);\n  const [info, setInfo] = useState(\"\");\n  const [isStarted, setIsStarted] = useState(false);\n  const [isBoard, setIsBoard] = useState(false);\n  const [phase, setPhase] = useState(\"\");\n\n  useEffect(() => {\n    setSocket(socketIOClient(ENDPOINT));\n  }, []);\n\n  const resetGame = () => {\n    setInfo(\"\");\n    setIsStarted(false);\n    setIsBoard(false);\n  };\n\n  useEffect(() => {\n    horn.play();\n\n    if (!socket) return;\n\n    socket.on(\"reconnect_attempt\", () => {\n      setInfo(`Trying to connect to ${ENDPOINT} ...`);\n    });\n\n    socket.on(\"disconnect-all\", () => {\n      window.location.reload();\n    });\n\n    socket.on(\"connect\", () => {\n      resetGame();\n    });\n\n    socket.on(\"connect_failed\", () => {\n      setInfo(\"Connection failed\");\n    });\n\n    socket.on(\"is-board\", () => {\n      setIsBoard(true);\n    });\n\n    socket.on(\"player\", (player: any) => {\n      console.log(player);\n      setPlayer(player);\n    });\n\n    socket.on(\"players\", (playersResponse: any) => {\n      setPlayers(playersResponse);\n    });\n\n    socket.on(\"info\", (msg: any) => {\n      setInfo(msg);\n    });\n\n    socket.on(\"table\", (data: any) => {\n      setTable(data);\n    });\n\n    socket.on(\"game-state\", (data: boolean) => {\n      setIsStarted(data);\n    });\n\n    socket.on(\"set-phase\", (data: string) => {\n      setPhase(data);\n    });\n  }, [socket]);\n\n  if (info) return <h1>{info}</h1>;\n  if (isBoard)\n    return (\n      <Board\n        isStarted={isStarted}\n        table={table}\n        players={players}\n        phase={phase}\n      />\n    );\n\n  return (\n    <StyledPage>\n      <div className=\"container\">\n        <Player\n          updateName={(name: string) => socket.emit(\"set-name\", name)}\n          player={player}\n        />\n\n        {phase === \"buying houses\" && (\n          <Bidding socket={socket} player={player} />\n        )}\n\n        <Hand player={player} socket={socket} />\n\n        {!isStarted && (\n          <div\n            className=\"island\"\n            style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n          >\n            <button onClick={() => socket.emit(\"start-game\")}>\n              Start Game\n            </button>\n            <button onClick={() => socket.emit(\"is-board\")}>Board</button>\n          </div>\n        )}\n        <button onClick={() => socket.emit(\"reset-game\")} id=\"reset-btn\">\n          Reset Game\n        </button>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  min-height: 100vh;\n  background-color: #b5d3e7;\n  padding: 10px;\n  padding-top: 40px;\n  * {\n    font-size: 30px;\n  }\n  .container {\n    max-width: 600px;\n    margin: 0 auto;\n  }\n  .island {\n    background: rgba(255, 255, 255, 0.6);\n    padding: 20px;\n    border-radius: 8px;\n    margin-top: 10px;\n  }\n  #reset-btn {\n    margin-top: 60px;\n    width: 100%;\n  }\n`;\n","const words: any = {\n  default: require(\"./data/default.json\"),\n  deep: require(\"./data/deep.json\"),\n};\n\nexport enum CardState {\n  default = \"default\",\n  guessedGreen = \"guessed spy green\",\n  guessedRed = \"guessed spy red\",\n  guessedBlue = \"guessed spy blue\",\n  guessedBystander = \"guessed bystander\",\n  bystanderNorth = \"bystander north\",\n  bystanderSouth = \"bystander south\",\n  bystanderBoth = \"bystander both\",\n}\n\nexport interface Card {\n  word: string;\n  state: CardState;\n}\n\nfunction shuffle(a: any[]) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nexport const createCards = (language: string, version: string): Card[] => {\n  const selectedWords = words[version];\n  const shuffledWords = shuffle(selectedWords);\n  const cards = new Array(25).fill({}).map((card, index) => ({\n    word: shuffledWords[index][language],\n    state: CardState.default,\n  }));\n  return cards;\n};\n\nexport const getNextCardState = {\n  standard: (currentState: CardState) => {\n    switch (currentState) {\n      case CardState.default:\n        return CardState.guessedBlue;\n\n      case CardState.guessedBlue:\n        return CardState.guessedRed;\n\n      case CardState.guessedRed:\n        return CardState.guessedBystander;\n\n      case CardState.guessedBystander:\n        return CardState.default;\n\n      default:\n        return CardState.default;\n    }\n  },\n  duet: (currentState: CardState) => {\n    switch (currentState) {\n      case CardState.default:\n        return CardState.guessedGreen;\n\n      case CardState.guessedGreen:\n        return CardState.bystanderNorth;\n\n      case CardState.bystanderNorth:\n        return CardState.bystanderSouth;\n\n      case CardState.bystanderSouth:\n        return CardState.bystanderBoth;\n\n      case CardState.bystanderBoth:\n        return CardState.default;\n\n      default:\n        return CardState.default;\n    }\n  },\n};\n","export const sand = \"#ede1c7\";\nexport const green_dark = \"#e0dd56\";\nexport const green_med = \"#048403\";\nexport const green_light = \"#004119\";\nexport const green_gradient = `radial-gradient(${green_dark}, ${green_med}, ${green_light})`;\nexport const red = \"#DE3E19\";\nexport const blue = \"#4C7DA7\";\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useRef, useState } from \"react\";\nexport default function Timer() {\n  const startTime = 60;\n  const [timeLeft, setTimeLeft] = useState(startTime);\n  const [isActive, setIsActive] = useState(false);\n  const sounds = {\n    tick: new Audio(process.env.PUBLIC_URL + \"/codenames/alarm-press.mp3\"),\n    alarm: new Audio(process.env.PUBLIC_URL + \"/codenames/alarm-bell.mp3\"),\n  };\n\n  useEffect(() => {\n    if (isActive) {\n      setTimeout(() => {\n        if (timeLeft < 1) {\n          //   sounds.alarm.play();\n          setIsActive(false);\n        } else {\n          setTimeLeft((timeLeft) => timeLeft - 1);\n          //   sounds.tick.play();\n        }\n      }, 1000);\n    } else {\n      setTimeLeft(startTime);\n    }\n  }, [timeLeft, isActive]);\n\n  const toggleTimer = () => {\n    setIsActive((isActive) => !isActive);\n  };\n\n  return (\n    <TimerStyled\n      onClick={toggleTimer}\n      percentage={(timeLeft / startTime) * 100}\n    >\n      <div className=\"timeLeft\">{timeLeft}</div>\n      <div className=\"timer\"></div>\n    </TimerStyled>\n  );\n}\n\nconst TimerStyled: any = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100px;\n  height: 100%;\n  border: 1px solid black;\n  background: rgba(0, 0, 0, 0.3);\n  margin-right: 20px;\n  .timeLeft {\n    margin: 0 auto;\n    z-index: 99;\n    font-size: 30px;\n    transform: rotateZ(-90deg);\n  }\n  .timer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: ${(props: any) => props.percentage + \"%\"};\n    background: ${(props: any) => {\n      const p = props.percentage;\n      if (p < 25) {\n        return \"rgba(150,0,0,0.8)\";\n      } else if (p < 50) {\n        return \"rgba(150,150,0,0.8)\";\n      } else {\n        return \"rgba(0,150,0,0.8)\";\n      }\n    }};\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, CardState, createCards, getNextCardState } from \"../util/cards\";\nimport { blue, green_gradient, red, sand } from \"../util/colors\";\nimport Timer from \"./Timer\";\n\nexport default function Codenames() {\n  const { language, version, cardset } = useParams<{\n    language: string;\n    version: \"standard\" | \"duet\";\n    cardset: string;\n  }>();\n\n  const [cards, setCards] = useState(createCards(language, cardset));\n  const [turn, setTurn] = useState(9);\n\n  const toggleCardState = (index: number) => {\n    const temp = [...cards];\n    temp[index].state = getNextCardState[version](temp[index].state);\n    setCards(temp);\n  };\n\n  const isGuessed = (card: Card) => {\n    if (card.state === CardState.guessedGreen) return true;\n    // if (card.state === CardState.guessedSouth) return true;\n    return false;\n  };\n\n  return (\n    <StyledPage>\n      <div className=\"container\">\n        {version === \"standard\" && <Timer />}\n        {version === \"duet\" && (\n          <div className=\"turn-counter\">\n            <div className=\"buttons\">\n              <button onClick={() => setTurn(turn + 1)}>↑</button>\n              <button onClick={() => setTurn(turn - 1)}>↓</button>\n            </div>\n            <span>Turns left: {turn}</span>\n          </div>\n        )}\n        <div className=\"board\">\n          {cards.map((card, index) => (\n            <div\n              className={\"word \" + card.state}\n              onClick={() => toggleCardState(index)}\n            >\n              {!isGuessed(card) && (\n                <>\n                  <span className=\"player-north\">{card.word}</span>\n                  <span className=\"player-south\">{card.word}</span>\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  background: url(${process.env.PUBLIC_URL}/codenames/wooden-table-bg.jpg);\n  background-position: center;\n  background-size: cover;\n  min-height: 100vh;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 600px;\n    @media screen and (max-height: 600px) {\n      height: 90vh;\n    }\n  }\n  .turn-counter {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    transform: rotateZ(-90deg);\n    background: rgba(255, 255, 255, 0.3);\n    padding: 8px;\n    width: 250px;\n    span {\n      font-size: 40px;\n      text-align: center;\n    }\n    .buttons {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 10px;\n      button {\n        height: 80px;\n        width: 80px;\n        border-radius: 8px;\n        border: 0;\n        background: #111;\n        color: white;\n        font-size: 30px;\n      }\n    }\n  }\n  .board {\n    display: flex;\n    flex-wrap: wrap;\n    width: 800px;\n    height: 100%;\n    .word {\n      font-size: 22px;\n      @media screen and (max-height: 600px) {\n        font-size: 16px;\n      }\n      font-weight: 400;\n      position: relative;\n      background: linear-gradient(${sand} 50%, #fff 50%);\n      border: 1px solid black;\n      border-radius: 8px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-around;\n      align-items: center;\n      flex: 1 0 16%;\n      margin: 5px;\n      user-select: none;\n      overflow: hidden;\n      span {\n        &.player-north {\n          transform: rotateZ(180deg);\n          font-style: italic;\n        }\n      }\n      &.guessed {\n        span {\n          display: none;\n        }\n        &.spy::before {\n          background: center url(${process.env.PUBLIC_URL}/codenames/spy.png);\n          background-size: contain;\n        }\n        &.bystander::before {\n          background: bottom\n            url(${process.env.PUBLIC_URL}/codenames/bystander.png);\n\n          background-size: 45%;\n        }\n        &.spy::before,\n        &.bystander::before {\n          opacity: 0.5;\n          background-repeat: no-repeat;\n          content: \"\";\n          display: block;\n          height: 100%;\n          width: 100%;\n        }\n\n        &.green {\n          background: ${green_gradient};\n        }\n        &.red {\n          background: ${red};\n        }\n        &.blue {\n          background: ${blue};\n        }\n        &.bystander {\n          background: ${sand};\n        }\n      }\n      &.north::before,\n      &.south::before,\n      &.both::before {\n        position: absolute;\n        font-size: 28px;\n        font-weight: 500;\n      }\n      &.north::before {\n        content: \"↑\";\n      }\n      &.south::before {\n        content: \"↓\";\n      }\n      &.both::before {\n        content: \"↑↓\";\n      }\n    }\n  }\n`;\n","export enum KeyState {\n  BYSTANDER = \"BYSTANDER\",\n  ASSASSIN = \"ASSASSIN\",\n  SPY = \"SPY\",\n  RED = \"RED\",\n  BLUE = \"BLUE\",\n}\n\nfunction shuffle(a: any[]) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nconst countKeyCards = (keyCard: KeyState[], type: string) => {\n  let count = 0;\n  keyCard.forEach((key: any) => {\n    if (key === type) count++;\n  });\n  return count;\n};\n\nconst randomPosition = () => Math.floor(Math.random() * 25) + 1;\n\nconst createRandomDuetKeys = () => {\n  const [a, b] = [\n    Array(25).fill(KeyState.BYSTANDER),\n    Array(25).fill(KeyState.BYSTANDER),\n  ];\n  const settings = {\n    counts: {\n      spy: 9,\n      spyOverlap: 3,\n      bystander: 9,\n      assasin: 3,\n    },\n  };\n  /* KEYCARD A */\n  // Create spies\n  while (countKeyCards(a, KeyState.SPY) < settings.counts.spy) {\n    const randomPos = randomPosition();\n    if (a[randomPos] === KeyState.BYSTANDER) {\n      a[randomPos] = KeyState.SPY;\n    }\n  }\n\n  // Create assasins\n  while (countKeyCards(a, KeyState.ASSASSIN) < settings.counts.assasin) {\n    const randomPos = randomPosition();\n    if (a[randomPos] === KeyState.BYSTANDER) {\n      a[randomPos] = KeyState.ASSASSIN;\n    }\n  }\n\n  /* KEYCARD B */\n  // Create non-overlapping spies\n  while (\n    countKeyCards(b, KeyState.SPY) <\n    settings.counts.spy - settings.counts.spyOverlap\n  ) {\n    const randomPos = randomPosition();\n    if (b[randomPos] === KeyState.BYSTANDER && a[randomPos] !== KeyState.SPY) {\n      b[randomPos] = KeyState.SPY;\n    }\n  }\n\n  // Create overlapping spies\n  while (countKeyCards(b, KeyState.SPY) < settings.counts.spy) {\n    const randomPos = randomPosition();\n    if (b[randomPos] === KeyState.BYSTANDER && a[randomPos] === KeyState.SPY) {\n      b[randomPos] = KeyState.SPY;\n    }\n  }\n\n  // Create assasins (non-overlapping)\n  while (countKeyCards(b, KeyState.ASSASSIN) < settings.counts.assasin) {\n    const randomPos = randomPosition();\n    if (\n      b[randomPos] === KeyState.BYSTANDER &&\n      a[randomPos] !== KeyState.ASSASSIN\n    ) {\n      b[randomPos] = KeyState.ASSASSIN;\n    }\n  }\n\n  return [\n    a,\n    b.reverse(), // Player b sits on the opposite side of the table\n  ];\n};\n\nconst createRandomStandardKeys = () => {\n  const [redCount, blueCount] = shuffle([8, 9]);\n  const bystanderCount = 25 - 8 - 9 - 1; // 7\n  const assasinCount = 1;\n  if (redCount > blueCount) {\n    alert(\"Red goes first\");\n  } else {\n    alert(\"Blue goes first\");\n  }\n  const keys = [\n    ...Array(redCount).fill(KeyState.RED),\n    ...Array(blueCount).fill(KeyState.BLUE),\n    ...Array(bystanderCount).fill(KeyState.BYSTANDER),\n    ...Array(assasinCount).fill(KeyState.ASSASSIN),\n  ];\n  return shuffle(keys);\n};\n\nexport const getKeys = (gameId: string, version: string): any => {\n  if (version === \"standard\") {\n    return [createRandomStandardKeys(), \"\"];\n  } else if (version === \"duet\") {\n    const [a, b] = createRandomDuetKeys();\n    let url = window.location.href + \"/\";\n    url += btoa(JSON.stringify(b));\n    return [a, url];\n  } else {\n    return null;\n  }\n};\n\n// export const validateKeys = () => {\n//   const keys = data[\"duet\"];\n//   Object.keys(keys).forEach((key) => {\n//     const game = keys[key];\n//     let spies = 0;\n//     let bystanders = 0;\n//     let assasins = 0;\n//     game.forEach((cell: any) => {\n//       switch (cell) {\n//         case KeyState.SPY:\n//           spies++;\n//           break;\n//         case KeyState.BYSTANDER:\n//           bystanders++;\n//           break;\n//         case KeyState.ASSASSIN:\n//           assasins++;\n//           break;\n//         default:\n//           break;\n//       }\n//     });\n//     if (spies === 9 && assasins === 3 && bystanders === 13) {\n//       // Everything OK!\n//     } else {\n//       alert(`Error in game ${key}. Check console output.`);\n//       console.log(`Game ${key} is invalid`);\n//       console.log(`Spies: ${spies}`);\n//       console.log(`Bystanders: ${bystanders}`);\n//       console.log(`Assasins: ${assasins}\\n`);\n//     }\n//   });\n// };\n\n// const printKeyCard = (keys: KeyState[]) => {\n//   let temp = \"\";\n//   for (let i = 0; i < 25; i++) {\n//     if (i % 5 === 0) {\n//       console.log(temp);\n//       temp = \"\";\n//     }\n//     temp += KeyState[keys[i]].substr(0, 3) + \"\\t\";\n//   }\n//   console.log(temp);\n// };\n\n// const printCommonSpies = (a: KeyState[], b: KeyState[]) => {\n//   let count = 0;\n//   a.forEach((key) => {\n//     if (key === KeyState.SPY) count++;\n//   });\n//   b.forEach((key, index) => {\n//     if (key === KeyState.SPY && a[index] !== KeyState.SPY) {\n//       count++;\n//     }\n//   });\n//   console.log(count);\n// };\n\n// const printOverlappingSpies = (a: KeyState[], b: KeyState[]) => {\n//   let count = 0;\n//   a.forEach((key, index) => {\n//     if (key === KeyState.SPY && b[index] === KeyState.SPY) count++;\n//   });\n//   console.log(count);\n// };\n","import styled from \"@emotion/styled\";\nimport copy from \"copy-to-clipboard\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { blue, green_gradient, green_light, red, sand } from \"../util/colors\";\nimport { getKeys, KeyState } from \"./util/keys\";\n\nexport default function KeyCard() {\n  const { version, preset } = useParams<any>();\n  const [keys, setKeys] = useState<KeyState[]>([]);\n  const [gameId, setGameId] = useState(\"\");\n  const [urlForFriend, setUrlForFriend] = useState(\"\");\n  const [hideUrl, setHideUrl] = useState(false);\n\n  useEffect(() => {\n    if (preset) {\n      let data = JSON.parse(atob(preset));\n      setKeys(data);\n    }\n  }, []);\n\n  const resetGame = (e: any) => {\n    e.preventDefault();\n    const [generatedKeys, url] = getKeys(gameId, version);\n    if (!generatedKeys) return;\n    if (url) setUrlForFriend(url);\n    setKeys(generatedKeys);\n    setHideUrl(false);\n  };\n\n  const handleCopy = () => {\n    copy(urlForFriend);\n    setHideUrl(true);\n  };\n\n  return (\n    <StyledPage>\n      {!hideUrl && urlForFriend && (\n        <div\n          className=\"url-share\"\n          style={{ width: \"100%\", wordBreak: \"break-all\" }}\n        >\n          <span>{urlForFriend}</span>\n          <button onClick={handleCopy}>Copy</button>\n        </div>\n      )}\n\n      <div className=\"is-started\">\n        <button id=\"newGame\" onClick={resetGame}>\n          Nyt spil\n        </button>\n        <div className=\"keys\">\n          {keys.map((key) => (\n            <div className={\"key \" + key} />\n          ))}\n        </div>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  min-height: 100vh;\n  padding: 20px;\n  background: url(${process.env.PUBLIC_URL}/codenames/wooden-table-bg.jpg);\n\n  button {\n    background: white;\n    border: 0;\n    border: 1px solid black;\n    padding: 12px;\n  }\n\n  .url-share {\n    margin-bottom: 20px;\n    span {\n      display: block;\n      background: white;\n    }\n    button {\n      height: 50px;\n      width: 100%;\n    }\n  }\n\n  button#newGame {\n    margin-bottom: 20px;\n  }\n  form {\n    input {\n      margin-bottom: 20px;\n      height: 40px;\n    }\n  }\n  .keys {\n    @media all and (orientation: landscape) {\n      width: 90vh;\n      height: 70vh;\n    }\n    @media all and (orientation: portrait) {\n      width: 90vw;\n      height: 70vw;\n    }\n\n    display: flex;\n    flex-wrap: wrap;\n    .key {\n      flex: 1 0 18%;\n      border: 1px solid black;\n      margin: 0.5%;\n      border-radius: 8px;\n      &.BYSTANDER {\n        background: ${sand};\n      }\n      &.ASSASSIN {\n        background: black;\n      }\n      &.SPY {\n        background: ${green_gradient};\n      }\n      &.RED {\n        background: ${red};\n      }\n      &.BLUE {\n        background: ${blue};\n      }\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { red } from \"./util/colors\";\n\nexport default function Codenames() {\n  const [language, setLanguage] = useState(\"da\");\n  const [version, setVersion] = useState(\"standard\");\n\n  return (\n    <StyledPage>\n      <h1>Settings</h1>\n      <div className=\"columns\">\n        <div className=\"col options\">\n          <h2>Language</h2>\n          <div\n            className={\"option\" + (language === \"da\" ? \" active\" : \"\")}\n            onClick={() => setLanguage(\"da\")}\n          >\n            Danish\n          </div>\n          <div\n            className={\"option\" + (language === \"en\" ? \" active\" : \"\")}\n            onClick={() => setLanguage(\"en\")}\n          >\n            English\n          </div>\n        </div>\n        <div className=\"col options\">\n          <h2>Version</h2>\n          <div\n            className={\"option\" + (version === \"standard\" ? \" active\" : \"\")}\n            onClick={() => setVersion(\"standard\")}\n          >\n            Standard\n          </div>\n          <div\n            className={\"option\" + (version === \"duet\" ? \" active\" : \"\")}\n            onClick={() => setVersion(\"duet\")}\n          >\n            Duet\n          </div>\n        </div>\n      </div>\n      <h1>Game</h1>\n      <div className=\"columns\">\n        <div className=\"col\">\n          <h2>Tools</h2>\n          <Link to={`/codenames/keycard/${version}`}>KeyCard</Link>\n        </div>\n        <div className=\"col\">\n          <h2>Board</h2>\n          <Link to={`/codenames/game/${version}/${language}/default`}>\n            Standard\n          </Link>\n          <Link to={`/codenames/game/${version}/${language}/deep`}>\n            Deep Undercover\n          </Link>\n        </div>\n      </div>\n    </StyledPage>\n  );\n}\n\nconst StyledPage = styled.div`\n  padding-top: 40px;\n  background: center url(${process.env.PUBLIC_URL}/codenames/bg.jpeg);\n  background-size: cover;\n  min-height: 100vh;\n  h1 {\n    font-size: 50px;\n    margin: 10px;\n    text-align: center;\n    color: white;\n    -webkit-text-stroke: 1px black;\n  }\n  @media screen and (max-width: 750px) {\n    width: 100%;\n    padding-right: 16px;\n    padding-left: 16px;\n  }\n  .columns {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    background: rgba(0, 0, 0, 0.75);\n    max-width: 800px;\n    margin: 0 auto;\n    margin-bottom: 20px;\n  }\n  .col {\n    padding: 0 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    font-weight: 300;\n    h2 {\n      text-align: center;\n      color: white;\n      font-weight: 400;\n    }\n    a,\n    .option {\n      background: radial-gradient(rgb(25, 25, 25), rgb(0, 0, 0));\n      border-radius: 8px;\n      margin-bottom: 20px;\n      color: white;\n      text-decoration: none;\n      font-size: 20px;\n      padding: 30px;\n      text-align: center;\n      user-select: none;\n      cursor: pointer;\n    }\n  }\n  .options {\n    padding-right: 20px;\n    .option {\n      &.active {\n        color: ${red};\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Codenames from \"./Game\";\nimport KeyCard from \"./KeyCard\";\nimport Home from \".\";\n\nexport default function CodenamesRouter() {\n  return (\n    <>\n      <Route path={\"/codenames/keycard/:version/:preset?\"}>\n        <KeyCard />\n      </Route>\n      <Route path={\"/codenames/game/:version/:language/:cardset\"}>\n        <Codenames />\n      </Route>\n      <Route exact path={\"/codenames\"}>\n        <Home />\n      </Route>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport KingOfNewYork from \"./pages/KingOfNewYork\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport StarRealms from \"./pages/StarRealms\";\nimport Munchkin from \"./pages/Munchkin\";\nimport ForSale from \"./pages/ForSale\";\nimport CodenamesRouter from \"./pages/Codenames/router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <CodenamesRouter />\n      <Route path={\"/for-sale\"}>\n        <ForSale />\n      </Route>\n      <Route path={\"/munchkin\"}>\n        <Munchkin />\n      </Route>\n      <Route path={\"/star-realms\"}>\n        <StarRealms />\n      </Route>\n      <Route path={\"/king-of-new-york\"}>\n        <KingOfNewYork />\n      </Route>\n      <Route exact path={\"/\"}>\n        <Home />\n      </Route>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
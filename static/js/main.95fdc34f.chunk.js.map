{"version":3,"sources":["serviceWorker.ts","components/DiceIcon/index.tsx","pages/KingOfNewYork/index.tsx","pages/Home/index.tsx","pages/StarRealms/PlayersPrompt.tsx","pages/StarRealms/index.tsx","pages/Munchkin/index.tsx","pages/ForSale/Card.tsx","pages/ForSale/Board/BuyPhase.tsx","pages/ForSale/components/Button.tsx","pages/ForSale/Board/SellPhase.tsx","pages/ForSale/Board/index.tsx","pages/ForSale/Player.tsx","pages/ForSale/Bidding.tsx","pages/ForSale/Hand.tsx","pages/ForSale/Options.tsx","pages/ForSale/ErrorPages/InfoPage.tsx","pages/ForSale/index.tsx","pages/Codenames/KeyCard/util/keys.ts","pages/Codenames/util/cards.ts","pages/Codenames/util/colors.tsx","pages/Codenames/util/useCustomWordList.tsx","pages/Codenames/Game/Timer.tsx","pages/Codenames/Game/index.tsx","pages/Codenames/KeyCard/index.tsx","pages/Codenames/ExternalData.tsx","pages/Codenames/index.tsx","pages/Codenames/router.tsx","pages/SevenWondersDuelAi/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","DiceIcon","name","amount","rule","url","RuleContainer","Array","fill","map","_","index","src","alt","style","marginRight","height","width","styled","div","KingOfNewYork","Background","Overlay","Flex","Home","StyledPage","to","PlayersPrompt","display","setPlayerCount","StyledPrompt","onClick","StarRealms","useState","startHp","players","setPlayers","showDialog","setShowDialog","sound","Audio","setHp","playerIndex","play","copy","newHp","hp","marginBottom","PlayersContainer","player","Player","HealthBar","percentage","paddingTop","count","newPlayers","i","push","props","Munchkin","colors","changePlayerStat","stat","value","editingName","level","strength","gender","Page","color","placeholder","className","onChange","e","target","changeGender","process","Card","card","selected","type","StyledCard","whileTap","scale","padValue","id","newId","toString","length","motion","BuyPhase","table","sort","a","b","currentBid","pass","Button","StyledButton","whileHover","children","button","SellPhase","socket","sales","setSales","SalesReveal","sale","justifyContent","flexWrap","cheque","emit","money","Board","isStarted","phase","updateName","setName","onSubmit","preventDefault","Bidding","visible","setCurrentBid","useEffect","on","changeBid","c","isDisabled","disabled","Hand","selectedCard","setSelectedCard","cards","StyledHand","textAlign","handleSelect","Options","clickedReset","setClickedReset","StyledOptions","setTimeout","AlreadyStarted","info","reset","console","log","setSocket","setPlayer","setTable","setInfo","setIsStarted","isBoard","setIsBoard","setPhase","socketIOClient","reload","playersResponse","msg","data","KeyState","shuffle","j","x","Math","floor","random","CardState","countKeyCards","keyCard","forEach","key","randomPosition","getKeys","gameId","version","keys","redCount","blueCount","RED","BLUE","BYSTANDER","ASSASSIN","createRandomStandardKeys","href","split","slice","join","btoa","JSON","stringify","settings","spy","spyOverlap","bystander","assasin","SPY","randomPos","checkSpyOverlap","printKeyCard","reverse","createRandomDuetKeys","alert","temp","substr","createCards","language","words","selectedWords","parse","atob","shuffledWords","word","state","default","green_gradient","red","useCustomWordList","setData","fetchAndSetCustomWordList","fetch","request","text","response","customWordListData","currentIndex","line","includes","error","Timer","timeLeft","setTimeLeft","isActive","setIsActive","TimerStyled","p","Codenames","useParams","cardset","setCards","turn","setTurn","setKeys","QRContent","setQRContent","customWordList","keyToCardMapping","guessedRed","guessedBlue","guessedBystander","guessedAssasin","generatedKeys","encoded_url","resetGame","require","deep","allCards","tempCards","whoGuesFirst","toggleCardState","guessedGreen","isGuessed","KeyCard","preset","urlForFriend","setUrlForFriend","hideUrl","setHideUrl","wordBreak","ExternalData","history","useHistory","setText","getWords","result","json","formattedWords","en","Error","setLanguage","setVersion","customWordLists","Object","filter","CodenamesRouter","path","exact","getRandomHero","randomIndex","getRandomCard","App","heroImg","setHeroImg","cardImg","setCardImg","addEventListener","keyDownHandler","removeEventListener","keyCode","handleClickRandomCard","handleClickRandomHero","randomHeroImg","randomCardImg","minHeight","backgroundColor","flexDirection","margin","ReactDOM","render","StrictMode","basename","SevenWondersDuelAi","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.95fdc34f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport default function DiceIcon({\r\n  name,\r\n  amount,\r\n  rule,\r\n}: {\r\n  name: string;\r\n  amount: number;\r\n  rule: string;\r\n}) {\r\n  const url = \"/boardgames/dice/\" + name;\r\n  const size = 50;\r\n  return (\r\n    <RuleContainer>\r\n      {Array(amount)\r\n        .fill(0)\r\n        .map((_: any, index: any) => (\r\n          <img\r\n            src={url}\r\n            alt={name}\r\n            style={{ marginRight: \"10px\" }}\r\n            height={size}\r\n            width={size}\r\n          />\r\n        ))}\r\n      <p>{rule}</p>\r\n    </RuleContainer>\r\n  );\r\n}\r\n\r\nconst RuleContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport DiceIcon from \"../../components/DiceIcon\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport default function KingOfNewYork() {\r\n  return (\r\n    <Background>\r\n      <Overlay>\r\n        <Flex>\r\n          <DiceIcon name=\"01_heart.png\" amount={1} rule=\"Heal x\" />\r\n          <DiceIcon name=\"01_heart.png\" amount={3} rule=\"Take power-up card\" />\r\n        </Flex>\r\n        <DiceIcon\r\n          name=\"02_destroy.png\"\r\n          amount={1}\r\n          rule=\"Damage x to buildings or units\"\r\n        />\r\n        <DiceIcon name=\"03_energy.png\" amount={1} rule=\"Take x energy\" />\r\n        <DiceIcon\r\n          name=\"04_skull.png\"\r\n          amount={1}\r\n          rule=\"Units in your borough you damage you\"\r\n        />\r\n        <DiceIcon\r\n          name=\"04_skull.png\"\r\n          amount={2}\r\n          rule=\"+ other monsters in your borough\"\r\n        />\r\n        <DiceIcon\r\n          name=\"04_skull.png\"\r\n          amount={3}\r\n          rule=\"All units damage all monsters + take the Statue of Liberty\"\r\n        />\r\n        <Flex>\r\n          <DiceIcon name=\"05_claw.png\" amount={1} rule=\"Do x damage\" />\r\n          <DiceIcon\r\n            name=\"05_claw.png\"\r\n            amount={4}\r\n            rule=\"Berserk (if using expansion)\"\r\n          />\r\n        </Flex>\r\n\r\n        <Flex>\r\n          <DiceIcon name=\"06_star.png\" amount={1} rule=\"Nothing*\" />\r\n          <DiceIcon name=\"06_star.png\" amount={3} rule=\"Take Superstar card\" />\r\n        </Flex>\r\n\r\n        <div>\r\n          <p>*If you have the Superstar card; x victory points</p>\r\n        </div>\r\n      </Overlay>\r\n    </Background>\r\n  );\r\n}\r\n\r\nconst Background = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: auto;\r\n\r\n  &::before {\r\n    background-image: url(\"/boardgames/bg.png\");\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 100%;\r\n    height: 100%;\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: -1;\r\n    filter: brightness(50%);\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  padding: 25px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  margin: 0 50px;\r\n  margin-top: 50px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  div {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <StyledPage>\r\n      <Link to={\"/king-of-new-york\"}>King of New York</Link>\r\n      <Link to={\"/star-realms\"}>Star Realms</Link>\r\n      <Link to={\"/munchkin\"}>Munchkin</Link>\r\n      <Link to={\"/codenames\"}>Codenames</Link>\r\n      <Link to={\"/for-sale\"}>For Sale</Link>\r\n      <Link to={\"/7wonders-duel-ai\"}>7 Wonders Duel AI</Link>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 100px 20px 0;\r\n  min-height: 100vh;\r\n  background-image: url(/boardgames/main-bg.gif);\r\n  background-position: center;\r\n  background-size: cover;\r\n  a {\r\n    --link-color: rgba(255, 255, 255, 0.3);\r\n    --link-color-hover: rgba(255, 255, 255, 0.7);\r\n    --link-text-color: black;\r\n    padding: 12px;\r\n    border-radius: 8px;\r\n    font-size: 32px;\r\n    background-color: var(--link-color);\r\n    color: var(--link-text-color);\r\n    text-decoration: none;\r\n    margin-bottom: 16px;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    &:hover {\r\n      background-color: var(--link-color-hover);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nexport default function PlayersPrompt({ display, setPlayerCount }: any) {\r\n  if (!display) return null;\r\n  return (\r\n    <StyledPrompt>\r\n      <p>How many players?</p>\r\n      <div>\r\n        <button onClick={() => setPlayerCount(2)}>2</button>\r\n        <button onClick={() => setPlayerCount(3)}>3</button>\r\n        <button onClick={() => setPlayerCount(4)}>4</button>\r\n      </div>\r\n    </StyledPrompt>\r\n  );\r\n}\r\n\r\nconst StyledPrompt = styled.div`\r\n  position: fixed;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  height: 90vh;\r\n  width: 80vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-size: 30px;\r\n  button {\r\n    height: 80px;\r\n    width: 100px;\r\n    &:not(:last-of-type) {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useState } from \"react\";\r\nimport PlayersPrompt from \"./PlayersPrompt\";\r\n\r\ninterface Player {\r\n  hp: number;\r\n}\r\n\r\nexport default function StarRealms() {\r\n  const [startHp] = useState(50);\r\n  const createPlayer = (): Player => ({ hp: startHp });\r\n  const [players, setPlayers] = useState<Player[]>([]);\r\n  const [showDialog, setShowDialog] = useState(\"player-count\");\r\n\r\n  const setPlayerCount = (count: number) => {\r\n    const newPlayers = [];\r\n    for (let i = 0; i < count; i++) {\r\n      newPlayers.push(createPlayer());\r\n    }\r\n    setPlayers(newPlayers);\r\n    setShowDialog(\"\");\r\n  };\r\n\r\n  const sound = new Audio(\"/boardgames/star-realms/laser_shot.mp3\");\r\n\r\n  const setHp = (playerIndex: number, amount: number) => {\r\n    if (amount < 0) {\r\n      sound.play();\r\n    }\r\n    const copy = [...players];\r\n    const currentHp = copy[playerIndex].hp;\r\n    let newHp = currentHp + amount;\r\n    if (newHp < 0) newHp = 0;\r\n    copy[playerIndex].hp = newHp;\r\n    setPlayers(copy);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setPlayers([]);\r\n    setShowDialog(\"player-count\");\r\n  };\r\n\r\n  return (\r\n    <StyledPage>\r\n      {showDialog !== \"player-count\" && (\r\n        <button onClick={resetGame} style={{ marginBottom: \"20px\" }}>\r\n          Reset game\r\n        </button>\r\n      )}\r\n      <PlayersContainer>\r\n        {players.map((player, index) => (\r\n          <Player>\r\n            <HealthBar percentage={(player.hp / startHp) * 100}>\r\n              <span>{player.hp}</span>\r\n            </HealthBar>\r\n            {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <p>{\"Player \" + (index + 1)}</p>\r\n            </div> */}\r\n            <div style={{ paddingTop: \"16px\" }}>\r\n              <button onClick={() => setHp(index, -5)}>-5</button>\r\n              <button onClick={() => setHp(index, -1)}>-1</button>\r\n              <button onClick={() => setHp(index, 1)}>+1</button>\r\n              <button onClick={() => setHp(index, 5)}>+5</button>\r\n            </div>\r\n          </Player>\r\n        ))}\r\n      </PlayersContainer>\r\n      <PlayersPrompt\r\n        display={showDialog === \"player-count\"}\r\n        setPlayerCount={setPlayerCount}\r\n      />\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nfunction getPlayerColor(percentage: number) {\r\n  if (percentage <= 0) return \"#333\";\r\n  if (percentage <= 25) return \"#B81D13\";\r\n  if (percentage <= 50) return \"#EFB700\";\r\n  return \"#008450\";\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 20px;\r\n  min-height: 100vh;\r\n  background: url(\"/boardgames/star-realms/star-wars-backgrounds-14.jpg\");\r\n  animation: 10s bg alternate infinite;\r\n  background-position: center;\r\n  @keyframes bg {\r\n    0% {\r\n      background-size: 100%;\r\n    }\r\n    100% {\r\n      background-size: 120%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PlayersContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Player = styled.div`\r\n  border: 1px solid black;\r\n  overflow: hidden;\r\n  padding: 16px;\r\n  font-size: 30px;\r\n  background-color: #eee;\r\n  margin-bottom: 20px;\r\n  opacity: 0.9;\r\n  border-radius: 20px;\r\n  border: 10px solid #333;\r\n  p {\r\n    margin: 0 0 10px;\r\n  }\r\n  button {\r\n    height: 80px;\r\n    width: 100px;\r\n    font-size: 24px;\r\n    border: 0;\r\n    background-color: #ccc;\r\n    &:not(:last-of-type) {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst HealthBar: any = styled.div`\r\n  height: 60px;\r\n  width: calc(100% + 32px);\r\n  background: black;\r\n  margin-left: -16px;\r\n  margin-top: -16px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  span {\r\n    position: absolute;\r\n    color: white;\r\n  }\r\n  &::after {\r\n    content: \"\";\r\n    background: ${(props: any) => getPlayerColor(props.percentage)};\r\n    display: block;\r\n    height: 100%;\r\n    width: ${(props: any) => props.percentage + \"%\"};\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface Player {\r\n  name: string;\r\n  editingName: boolean;\r\n  level: number;\r\n  strength: number;\r\n  gender: string;\r\n}\r\n\r\nexport default function Munchkin() {\r\n  // const [startHp, setStartHp] = useState(50);\r\n\r\n  const colors = [\r\n    \"#915A9A\", // Purple\r\n    \"#F2CA4C\", // Yellow\r\n    \"#CD2026\", // Red\r\n    \"#369541\", // Green,\r\n    \"#596DAD\", // Blue\r\n  ];\r\n\r\n  const createPlayer = (): Player => ({\r\n    name: \"\",\r\n    editingName: true,\r\n    level: 0,\r\n    strength: 0,\r\n    gender: \"male\",\r\n  });\r\n\r\n  const changePlayerStat = (\r\n    playerIndex: number,\r\n    stat: keyof Player,\r\n    value: any\r\n  ) => {\r\n    const copy: any = [...players];\r\n    copy[playerIndex][stat] = value;\r\n    setPlayers(copy);\r\n  };\r\n\r\n  const changeGender = (playerIndex: number) => {\r\n    const player = players[playerIndex];\r\n    changePlayerStat(\r\n      playerIndex,\r\n      \"gender\",\r\n      player.gender === \"male\" ? \"female\" : \"male\"\r\n    );\r\n  };\r\n\r\n  const addPlayer = () => {\r\n    setPlayers([...players, createPlayer()]);\r\n  };\r\n\r\n  const [players, setPlayers] = useState<Player[]>([createPlayer()]);\r\n\r\n  return (\r\n    <Page>\r\n      <PlayersContainer>\r\n        {players.map((player, index) => (\r\n          <Player color={colors[index]}>\r\n            {!player.editingName ? (\r\n              <>\r\n                <div>\r\n                  <span>{player.name || \"Unnamed\"}</span>\r\n                </div>\r\n                <button\r\n                  onClick={() => changePlayerStat(index, \"editingName\", true)}\r\n                >\r\n                  Edit name\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  value={player.name}\r\n                  placeholder=\"Enter name\"\r\n                  className=\"player-name\"\r\n                  onChange={(e) =>\r\n                    changePlayerStat(index, \"name\", e.target.value)\r\n                  }\r\n                />\r\n                <button\r\n                  onClick={() => changePlayerStat(index, \"editingName\", false)}\r\n                >\r\n                  Confirm\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <div\r\n              className=\"player-img-container\"\r\n              onClick={() => changeGender(index)}\r\n            >\r\n              <img\r\n                className=\"player-img\"\r\n                src={\r\n                  process.env.PUBLIC_URL + \"/munchkin/\" + player.gender + \".png\"\r\n                }\r\n                alt={\"munchkin-\" + player.gender}\r\n              />\r\n            </div>\r\n            <div className=\"stats\">\r\n              <div>\r\n                <button\r\n                  onClick={() =>\r\n                    changePlayerStat(index, \"level\", player.level + 1)\r\n                  }\r\n                >\r\n                  {\"\\u2191\"}\r\n                </button>\r\n                <div>{player.level}</div>\r\n                <div>Level</div>\r\n                <button\r\n                  onClick={() =>\r\n                    changePlayerStat(index, \"level\", player.level - 1)\r\n                  }\r\n                >\r\n                  {\"\\u2193\"}\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  onClick={() =>\r\n                    changePlayerStat(index, \"strength\", player.strength + 1)\r\n                  }\r\n                >\r\n                  {\"\\u2191\"}\r\n                </button>\r\n                <div>{player.strength}</div>\r\n                <div>Strength</div>\r\n                <button\r\n                  onClick={() =>\r\n                    changePlayerStat(index, \"strength\", player.strength - 1)\r\n                  }\r\n                >\r\n                  {\"\\u2193\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Player>\r\n        ))}\r\n        <button onClick={addPlayer}>Add player</button>\r\n      </PlayersContainer>\r\n    </Page>\r\n  );\r\n}\r\n\r\nconst Page = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Grenze+Gotisch:wght@200;400&display=swap\");\r\n  padding: 20px;\r\n  min-height: 100vh;\r\n  background-color: #ffe5cc;\r\n  * {\r\n    font-family: \"Grenze Gotisch\", cursive;\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nconst PlayersContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Player: any = styled.div`\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n  box-shadow: 0px 3px 3px #ccc;\r\n  margin-right: 20px;\r\n  margin-bottom: 20px;\r\n  width: 200px;\r\n  background-color: #fff2e6;\r\n  .player-img-container {\r\n    padding: 8px;\r\n    display: flex;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    background-color: ${(props) => props.color};\r\n  }\r\n  .player-img {\r\n    height: 100px;\r\n  }\r\n  .player-name {\r\n    width: 100%;\r\n  }\r\n  .stats {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      div {\r\n        &:first-of-type {\r\n          padding-top: 4px;\r\n        }\r\n        padding-bottom: 4px;\r\n      }\r\n      button {\r\n        height: 40px;\r\n        width: 40px;\r\n        font-size: 20px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nexport default function Card({\r\n  card,\r\n  selected,\r\n  onClick,\r\n  type,\r\n}: {\r\n  card: { name: string; value: number };\r\n  selected?: boolean;\r\n  onClick?: any;\r\n  type?: string;\r\n}) {\r\n  const handleClick = () => {\r\n    if (onClick) onClick();\r\n  };\r\n\r\n  const imgPath = () => {\r\n    if (type === \"cheques\") {\r\n      return `${process.env.PUBLIC_URL}/for-sale/cheques/tile${padValue(\r\n        card.value\r\n      )}.png`;\r\n    }\r\n    return `${process.env.PUBLIC_URL}/for-sale/homes/tile${padValue(\r\n      card.value\r\n    )}.png`;\r\n  };\r\n\r\n  return (\r\n    <StyledCard\r\n      whileTap={{ scale: 1.05 }}\r\n      className={\"card\" + (selected ? \" selected\" : \"\")}\r\n      onClick={handleClick}\r\n    >\r\n      <img src={imgPath()} alt=\"\" />\r\n    </StyledCard>\r\n  );\r\n}\r\n\r\nconst padValue = (id: number) => {\r\n  let newId = id.toString();\r\n  if (newId.length === 1) return \"00\" + id;\r\n  if (newId.length === 2) return \"0\" + id;\r\n  return id;\r\n};\r\n\r\nconst StyledCard: any = styled(motion.div)`\r\n  flex: 0 1 48%;\r\n  border: 1px solid black;\r\n  margin-bottom: 10px;\r\n  background: white;\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  box-shadow: 3px 3px 3px #ccc;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  p {\r\n    text-align: center;\r\n  }\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    user-select: none;\r\n    touch-action: none;\r\n    pointer-events: none;\r\n  }\r\n  &.selected {\r\n    filter: brightness(50%);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Card from \"../Card\";\r\n\r\nexport default function BuyPhase({ table, players }: any) {\r\n  return (\r\n    <>\r\n      <h1>Buying Phase</h1>\r\n      <div className=\"cards island\">\r\n        {table.map((card: any) => (\r\n          <Card card={card} />\r\n        ))}\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <th>PLAYER</th>\r\n          <th>BID</th>\r\n        </thead>\r\n        <tbody>\r\n          {players\r\n            .sort((a: any, b: any) => b.currentBid - a.currentBid)\r\n            .map((player: any) => (\r\n              <tr className={player.pass ? \"pass\" : \"\"}>\r\n                <td>{player.name}</td>\r\n                <td>\r\n                  {player.currentBid > 0 ? player.currentBid + \".000$\" : 0}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nexport default function Button(props: any) {\r\n  return (\r\n    <StyledButton\r\n      whileHover={{ scale: 1.025 }}\r\n      whileTap={{ scale: 1.05 }}\r\n      {...props}\r\n    >\r\n      {props.children}\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nconst StyledButton = styled(motion.button)`\r\n  height: 60px;\r\n  margin-bottom: 6px;\r\n  flex: 1 0 45%;\r\n  background-color: white;\r\n  border: 1px solid #333;\r\n  border-radius: 12px;\r\n  text-transform: uppercase;\r\n  outline: 0;\r\n  &:nth-of-type(odd) {\r\n    &:not(:last-of-type) {\r\n      margin-right: 6px;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { setInterval } from \"timers\";\r\nimport Card from \"../Card\";\r\nimport Button from \"../components/Button\";\r\n\r\nexport default function SellPhase({\r\n  table,\r\n  players,\r\n  socket,\r\n  sales,\r\n  setSales,\r\n}: any) {\r\n  const clearReveal = () => {\r\n    socket.emit(\"reset-sales\");\r\n  };\r\n\r\n  if (sales.length > 1) {\r\n    return (\r\n      <SalesReveal>\r\n        <div className=\"container\">\r\n          {sales.map((sale: any) => (\r\n            <div className=\"sale\">\r\n              <h2>{sale.player.name}</h2>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  flexWrap: \"wrap\",\r\n                }}\r\n              >\r\n                <Card card={sale.card} />\r\n                <Card card={sale.cheque} type=\"cheques\" />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <Button onClick={clearReveal} id=\"btn-next\">\r\n          Next\r\n        </Button>\r\n      </SalesReveal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Selling Phase</h1>\r\n      <div className=\"cards island\">\r\n        {table.map((card: any) => (\r\n          <Card card={card} type=\"cheques\" />\r\n        ))}\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <th>PLAYER</th>\r\n          <th>MONEY</th>\r\n        </thead>\r\n        <tbody>\r\n          {players\r\n            .sort((a: any, b: any) => b.money - a.money)\r\n            .map((player: any) => (\r\n              <tr className={player.pass ? \"pass\" : \"\"}>\r\n                <td>{player.name}</td>\r\n                <td>{player.money > 0 ? player.money + \".000$\" : 0}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nconst SalesReveal = styled.div`\r\n  .container {\r\n    display: flex;\r\n    .sale {\r\n      flex: 0 1 32%;\r\n    }\r\n  }\r\n  #btn-next {\r\n    width: 100%;\r\n    height: 80px;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport BuyPhase from \"./BuyPhase\";\r\nimport SellPhase from \"./SellPhase\";\r\n\r\nexport default function Board({\r\n  isStarted,\r\n  players,\r\n  table,\r\n  phase,\r\n  socket,\r\n  sales,\r\n  setSales,\r\n}: any) {\r\n  if (!isStarted)\r\n    return (\r\n      <StyledPage>\r\n        <h1>Waiting to start</h1>\r\n        <div id=\"game-box\">\r\n          <img src={process.env.PUBLIC_URL + \"/for-sale/box.jpg\"} alt=\"\" />\r\n        </div>\r\n      </StyledPage>\r\n    );\r\n  return (\r\n    <StyledPage>\r\n      <div className=\"container\">\r\n        {phase === \"buying houses\" && (\r\n          <BuyPhase players={players} table={table} />\r\n        )}\r\n        {phase === \"selling houses\" && (\r\n          <SellPhase\r\n            players={players}\r\n            table={table}\r\n            socket={socket}\r\n            sales={sales}\r\n            setSales={setSales}\r\n          />\r\n        )}\r\n      </div>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  background-color: #b5d3e7;\r\n  min-height: 100vh;\r\n  padding-top: 20px;\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n  .container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n  .cards {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* flex-wrap: wrap; */\r\n  }\r\n  table {\r\n    border-spacing: 0;\r\n    th {\r\n      text-align: left;\r\n    }\r\n    width: 100%;\r\n    * {\r\n      font-size: 30px;\r\n    }\r\n\r\n    tr {\r\n      &:nth-of-type(odd) {\r\n        background-color: rgba(255, 255, 255, 0.3);\r\n      }\r\n      &.pass {\r\n        * {\r\n          text-decoration: line-through;\r\n        }\r\n      }\r\n      td {\r\n        padding: 4px;\r\n      }\r\n    }\r\n  }\r\n  #game-box {\r\n    width: 600px;\r\n    margin: 0 auto;\r\n    max-width: 80%;\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useState } from \"react\";\r\nimport Button from \"./components/Button\";\r\n\r\nexport default function Player({ updateName, player, isStarted }: any) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleNameChange = (e: any) => {\r\n    e.preventDefault();\r\n    updateName(name);\r\n  };\r\n\r\n  return (\r\n    <StyledPage className=\"island\">\r\n      <form onSubmit={handleNameChange}>\r\n        <div className=\"name-input\">\r\n          {!isStarted && (\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Enter name\"\r\n            />\r\n          )}\r\n          {isStarted && <h2 id=\"player-name\">{player.name}</h2>}\r\n          {name !== player.name && !isStarted && (\r\n            <Button id=\"set-name\">\r\n              <span>OK</span>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </form>\r\n      {isStarted && (\r\n        <div className=\"money\">\r\n          <span>Total money: {player.money}.000$</span>\r\n        </div>\r\n      )}\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  #player-name {\r\n    text-align: center;\r\n  }\r\n\r\n  .money {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 10px;\r\n    color: green;\r\n  }\r\n  .name-input {\r\n    position: relative;\r\n    input {\r\n      outline: 0;\r\n      border: 1px solid black;\r\n      border-radius: 16px;\r\n      width: 100%;\r\n      height: 60px;\r\n      text-align: left;\r\n      padding-left: 10px;\r\n    }\r\n    button {\r\n      border-top-left-radius: 0;\r\n      border-bottom-left-radius: 0;\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      width: 20%;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { green_med, red } from \"../Codenames/util/colors\";\r\nimport Button from \"./components/Button\";\r\n\r\nexport default function Bidding({ socket, player, visible }: any) {\r\n  const [currentBid, setCurrentBid] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"reset-bids\", () => {\r\n      setCurrentBid(0);\r\n    });\r\n  }, [socket]);\r\n\r\n  const sendBid = () => {\r\n    socket.emit(\"bid\", currentBid);\r\n  };\r\n\r\n  const changeBid = (type: any) => {\r\n    if (type === \"increase\") {\r\n      setCurrentBid((c) => {\r\n        if (c < player.money) {\r\n          return c + 1;\r\n        } else {\r\n          return c;\r\n        }\r\n      });\r\n    } else {\r\n      setCurrentBid((c) => {\r\n        if (c > 0) {\r\n          return c - 1;\r\n        } else {\r\n          return c;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return player.pass;\r\n  };\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <StyledPage className=\"island\">\r\n      {!isDisabled() && (\r\n        <p id=\"current-bid\">\r\n          Current bid: {currentBid === 0 ? \"--\" : currentBid + \".000$\"}\r\n        </p>\r\n      )}\r\n      {isDisabled() && (\r\n        <>\r\n          <p>You passed.</p> <p>Wait for the next round</p>\r\n        </>\r\n      )}\r\n      <div className=\"buttons\">\r\n        <Button\r\n          onClick={() => changeBid(\"increase\")}\r\n          id=\"up\"\r\n          disabled={isDisabled()}\r\n        >\r\n          <span>MORE</span>\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => changeBid(\"decrease\")}\r\n          id=\"down\"\r\n          disabled={isDisabled()}\r\n        >\r\n          <span>LESS</span>\r\n        </Button>\r\n\r\n        <Button onClick={sendBid} id=\"bid\" disabled={isDisabled()}>\r\n          <span>BID</span>\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => socket.emit(\"pass\")}\r\n          id=\"pass\"\r\n          disabled={isDisabled()}\r\n        >\r\n          <span>PASS</span>\r\n        </Button>\r\n      </div>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  #current-bid {\r\n    text-align: center;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    #bid {\r\n      background-color: #31bd42;\r\n    }\r\n    #pass {\r\n      background-color: #e0352f;\r\n    }\r\n    #bid,\r\n    #pass {\r\n      flex: 0 0 100%;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default function Hand({\r\n  player,\r\n  socket,\r\n  visible,\r\n  disabled,\r\n  phase,\r\n}: any) {\r\n  const [selectedCard, setSelectedCard] = useState(-1);\r\n  const handleSelect = (card: any) => {\r\n    if (phase !== \"selling houses\") return;\r\n    setSelectedCard(card.id);\r\n    socket.emit(\"select-card\", card);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"reset-cards\", () => {\r\n      setSelectedCard(-1);\r\n    });\r\n  }, [socket]);\r\n\r\n  if (!visible) return null;\r\n  if (player.cards.length === 0) return null;\r\n\r\n  return (\r\n    <StyledHand className=\"island\">\r\n      {disabled && (\r\n        <h2 style={{ textAlign: \"center\", width: \"100%\" }}>\r\n          Please wait for the next round\r\n        </h2>\r\n      )}\r\n      {!disabled && (\r\n        <>\r\n          {player.cards.map((card: any) => (\r\n            <Card\r\n              card={card}\r\n              selected={selectedCard === card.id}\r\n              onClick={() => handleSelect(card)}\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </StyledHand>\r\n  );\r\n}\r\n\r\nconst StyledHand = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  .card {\r\n    margin-top: -150px;\r\n    &:nth-of-type(1) {\r\n      margin-top: 0;\r\n    }\r\n    &:nth-of-type(2) {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { red } from \"../Codenames/util/colors\";\r\nimport Button from \"./components/Button\";\r\n\r\nexport default function Options({ socket, visible }: any) {\r\n  const [clickedReset, setClickedReset] = useState(false);\r\n  const handleResetGame = () => {\r\n    if (!clickedReset) {\r\n      setClickedReset(true);\r\n      setTimeout(() => {\r\n        setClickedReset(false);\r\n      }, 3000);\r\n      return;\r\n    }\r\n    socket.emit(\"reset-game\");\r\n    setClickedReset(false);\r\n  };\r\n  return (\r\n    <StyledOptions\r\n      className=\"island\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <Button\r\n        onClick={handleResetGame}\r\n        id=\"reset-btn\"\r\n        className={clickedReset ? \"clicked\" : \"\"}\r\n      >\r\n        <span>{!clickedReset ? \"Reset\" : \"Are you sure?\"}</span>\r\n      </Button>\r\n\r\n      {visible && (\r\n        <>\r\n          <Button onClick={() => socket.emit(\"is-board\")}>\r\n            <span>Board</span>\r\n          </Button>\r\n          <Button onClick={() => socket.emit(\"start-game\")}>\r\n            <span>Start Game</span>\r\n          </Button>\r\n        </>\r\n      )}\r\n    </StyledOptions>\r\n  );\r\n}\r\n\r\nconst StyledOptions = styled.div`\r\n  #reset-btn {\r\n    transition: 1s background-color;\r\n    &.clicked {\r\n      background-color: #e0352f;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\nimport Button from \"../components/Button\";\r\n\r\nexport default function AlreadyStarted({ info, reset, socket }: any) {\r\n  const handleClick = () => {\r\n    console.log(socket);\r\n    reset();\r\n  };\r\n  return (\r\n    <StyledPage>\r\n      <h1>{info}</h1>\r\n      <Button onClick={handleClick}>Reset Game</Button>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  padding-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n  button {\r\n    flex: 0 0 60px;\r\n    width: 80%;\r\n    max-width: 400px;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Board from \"./Board\";\r\nimport Player from \"./Player\";\r\nimport Bidding from \"./Bidding\";\r\nimport Hand from \"./Hand\";\r\nimport Options from \"./Options\";\r\nimport InfoPage from \"./ErrorPages/InfoPage\";\r\nconst ENDPOINT =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://192.168.8.105:4001\"\r\n    : \"https://forsale.ngram.dk\";\r\nconst horn = new Audio(process.env.PUBLIC_URL + \"/for-sale/party_horn.mp3\");\r\n\r\nexport default function Home() {\r\n  const [socket, setSocket] = useState<any>(null);\r\n  const [player, setPlayer] = useState({ id: \"\", money: 0, cards: [] });\r\n  const [players, setPlayers] = useState([]);\r\n  const [table, setTable] = useState([]);\r\n  const [info, setInfo] = useState(\"\");\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [isBoard, setIsBoard] = useState(false);\r\n  const [phase, setPhase] = useState(\"\");\r\n  const [sales, setSales] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setSocket(socketIOClient(ENDPOINT));\r\n  }, []);\r\n\r\n  const resetGame = () => {\r\n    setInfo(\"\");\r\n    setIsStarted(false);\r\n    setIsBoard(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on(\"reconnect_attempt\", () => {\r\n      setInfo(`Trying to connect to ${ENDPOINT} ...`);\r\n    });\r\n\r\n    socket.on(\"disconnect-all\", () => {\r\n      window.location.reload();\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      resetGame();\r\n    });\r\n\r\n    socket.on(\"connect_failed\", () => {\r\n      setInfo(\"Connection failed\");\r\n    });\r\n\r\n    socket.on(\"is-board\", () => {\r\n      setIsBoard(true);\r\n    });\r\n\r\n    socket.on(\"player\", (player: any) => {\r\n      setPlayer(player);\r\n    });\r\n\r\n    socket.on(\"players\", (playersResponse: any) => {\r\n      setPlayers(playersResponse);\r\n    });\r\n\r\n    socket.on(\"info\", (msg: any) => {\r\n      setInfo(msg);\r\n    });\r\n\r\n    socket.on(\"table\", (data: any) => {\r\n      setTable(data);\r\n    });\r\n\r\n    socket.on(\"game-state\", (data: boolean) => {\r\n      setIsStarted(data);\r\n    });\r\n\r\n    socket.on(\"set-phase\", (data: string) => {\r\n      setPhase(data);\r\n    });\r\n\r\n    socket.on(\"reveal-sales\", (data: any) => {\r\n      setSales(data);\r\n    });\r\n  }, [socket]);\r\n\r\n  if (info)\r\n    return (\r\n      <InfoPage\r\n        info={info}\r\n        reset={() => socket.emit(\"reset-game\")}\r\n        socket={socket}\r\n      />\r\n    );\r\n  if (isBoard)\r\n    return (\r\n      <Board\r\n        isStarted={isStarted}\r\n        table={table}\r\n        players={players}\r\n        phase={phase}\r\n        socket={socket}\r\n        sales={sales}\r\n        setSales={setSales}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <StyledPage>\r\n      <div className=\"container\">\r\n        <Player\r\n          updateName={(name: string) => socket.emit(\"set-name\", name)}\r\n          player={player}\r\n          isStarted={isStarted}\r\n        />\r\n\r\n        <Bidding\r\n          socket={socket}\r\n          player={player}\r\n          visible={phase === \"buying houses\"}\r\n        />\r\n\r\n        <Hand\r\n          player={player}\r\n          socket={socket}\r\n          visible={isStarted}\r\n          disabled={sales.length > 0}\r\n          phase={phase}\r\n        />\r\n\r\n        <Options socket={socket} visible={!isStarted} />\r\n      </div>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  min-height: 100vh;\r\n  background-color: #b5d3e7;\r\n  padding: 10px;\r\n  padding-top: 40px;\r\n  * {\r\n    font-size: 26px;\r\n  }\r\n  .container {\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background: white;\r\n    border-radius: 16px;\r\n  }\r\n  .island {\r\n    &:not(:first-of-type) {\r\n      &::before {\r\n        display: block;\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 1px;\r\n        background: #ccc;\r\n        margin: 40px 0;\r\n      }\r\n    }\r\n  }\r\n  #reset-btn {\r\n    width: 100%;\r\n  }\r\n`;\r\n","export enum KeyState {\r\n  BYSTANDER = \"BYSTANDER\",\r\n  ASSASSIN = \"ASSASSIN\",\r\n  SPY = \"SPY\",\r\n  RED = \"RED\",\r\n  BLUE = \"BLUE\",\r\n}\r\n\r\nfunction shuffle(a: any[]) {\r\n  var j, x, i;\r\n  for (i = a.length - 1; i > 0; i--) {\r\n    j = Math.floor(Math.random() * (i + 1));\r\n    x = a[i];\r\n    a[i] = a[j];\r\n    a[j] = x;\r\n  }\r\n  return a;\r\n}\r\n\r\nconst countKeyCards = (keyCard: KeyState[], type: string) => {\r\n  let count = 0;\r\n  keyCard.forEach((key: any) => {\r\n    if (key === type) count++;\r\n  });\r\n  return count;\r\n};\r\n\r\nconst randomPosition = () => Math.floor(Math.random() * 25) + 1;\r\n\r\nconst createRandomDuetKeys = () => {\r\n  const [a, b] = [\r\n    Array(25).fill(KeyState.BYSTANDER),\r\n    Array(25).fill(KeyState.BYSTANDER),\r\n  ];\r\n  const settings = {\r\n    counts: {\r\n      spy: 9,\r\n      spyOverlap: 3,\r\n      bystander: 9,\r\n      assasin: 3,\r\n    },\r\n  };\r\n  /* KEYCARD A */\r\n  // Create spies\r\n  while (countKeyCards(a, KeyState.SPY) < settings.counts.spy) {\r\n    const randomPos = randomPosition();\r\n    if (a[randomPos] === KeyState.BYSTANDER) {\r\n      a[randomPos] = KeyState.SPY;\r\n    }\r\n  }\r\n\r\n  // Create assasins\r\n  while (countKeyCards(a, KeyState.ASSASSIN) < settings.counts.assasin) {\r\n    const randomPos = randomPosition();\r\n    if (a[randomPos] === KeyState.BYSTANDER) {\r\n      a[randomPos] = KeyState.ASSASSIN;\r\n    }\r\n  }\r\n\r\n  /* KEYCARD B */\r\n  // Create non-overlapping spies\r\n  while (\r\n    countKeyCards(b, KeyState.SPY) <\r\n    settings.counts.spy - settings.counts.spyOverlap\r\n  ) {\r\n    const randomPos = randomPosition();\r\n    if (\r\n      b[randomPos] === KeyState.BYSTANDER &&\r\n      a[randomPos] !== KeyState.SPY &&\r\n      a[randomPos] !== KeyState.ASSASSIN\r\n    ) {\r\n      b[randomPos] = KeyState.SPY;\r\n    }\r\n  }\r\n\r\n  // Create overlapping spies\r\n  while (countKeyCards(b, KeyState.SPY) < settings.counts.spy) {\r\n    const randomPos = randomPosition();\r\n    if (\r\n      b[randomPos] === KeyState.BYSTANDER &&\r\n      a[randomPos] === KeyState.SPY &&\r\n      a[randomPos] !== KeyState.ASSASSIN\r\n    ) {\r\n      b[randomPos] = KeyState.SPY;\r\n    }\r\n  }\r\n\r\n  // Create assasins (non-overlapping)\r\n  while (countKeyCards(b, KeyState.ASSASSIN) < settings.counts.assasin) {\r\n    const randomPos = randomPosition();\r\n    if (\r\n      b[randomPos] === KeyState.BYSTANDER &&\r\n      a[randomPos] !== KeyState.ASSASSIN &&\r\n      a[randomPos] !== KeyState.SPY\r\n    ) {\r\n      b[randomPos] = KeyState.ASSASSIN;\r\n    }\r\n  }\r\n\r\n  checkSpyOverlap(a, b);\r\n  printKeyCard(a);\r\n  printKeyCard(b);\r\n\r\n  return [\r\n    a,\r\n    b.reverse(), // Player b sits on the opposite side of the table\r\n  ];\r\n};\r\n\r\nconst createRandomStandardKeys = () => {\r\n  const [redCount, blueCount] = shuffle([8, 9]);\r\n  const bystanderCount = 25 - 8 - 9 - 1; // 7\r\n  const assasinCount = 1;\r\n  const keys = [\r\n    ...Array(redCount).fill(KeyState.RED),\r\n    ...Array(blueCount).fill(KeyState.BLUE),\r\n    ...Array(bystanderCount).fill(KeyState.BYSTANDER),\r\n    ...Array(assasinCount).fill(KeyState.ASSASSIN),\r\n  ];\r\n  return shuffle(keys);\r\n};\r\n\r\nexport const getKeys = (gameId: string, version: string): any => {\r\n  if (version === \"standard\") {\r\n    const keys = createRandomStandardKeys()\r\n    let url = window.location.href + \"/\";\r\n    url = url.split(\"/\").slice(0, url.split(\"/\").length - 5).join(\"/\") + \"/keycard/standard/\"\r\n    url += btoa(JSON.stringify(keys));\r\n    return [keys, url];\r\n    \r\n  } else if (version === \"duet\") {\r\n    const [a, b] = createRandomDuetKeys();\r\n    let url = window.location.href + \"/\";\r\n    url += btoa(JSON.stringify(b));\r\n    return [a, url];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\n// export const validateKeys = () => {\r\n//   const keys = data[\"duet\"];\r\n//   Object.keys(keys).forEach((key) => {\r\n//     const game = keys[key];\r\n//     let spies = 0;\r\n//     let bystanders = 0;\r\n//     let assasins = 0;\r\n//     game.forEach((cell: any) => {\r\n//       switch (cell) {\r\n//         case KeyState.SPY:\r\n//           spies++;\r\n//           break;\r\n//         case KeyState.BYSTANDER:\r\n//           bystanders++;\r\n//           break;\r\n//         case KeyState.ASSASSIN:\r\n//           assasins++;\r\n//           break;\r\n//         default:\r\n//           break;\r\n//       }\r\n//     });\r\n//     if (spies === 9 && assasins === 3 && bystanders === 13) {\r\n//       // Everything OK!\r\n//     } else {\r\n//       alert(`Error in game ${key}. Check console output.`);\r\n//       console.log(`Game ${key} is invalid`);\r\n//       console.log(`Spies: ${spies}`);\r\n//       console.log(`Bystanders: ${bystanders}`);\r\n//       console.log(`Assasins: ${assasins}\\n`);\r\n//     }\r\n//   });\r\n// };\r\n\r\nconst checkSpyOverlap = (a: any, b: any) => {\r\n  a.forEach((key: KeyState, index: number) => {\r\n    if (key === KeyState.ASSASSIN && b[index] === KeyState.SPY) {\r\n      alert(\"Overlap\");\r\n      console.log(index + \" Assasin on A while spy on B \");\r\n    }\r\n    if (key === KeyState.SPY && b[index] === KeyState.ASSASSIN) {\r\n      alert(\"Overlap\");\r\n      console.log(index + \" Assasin on B while spy on A\");\r\n    }\r\n  });\r\n};\r\n\r\nconst printKeyCard = (keys: KeyState[]) => {\r\n  let temp = \"\";\r\n  for (let i = 0; i < 25; i++) {\r\n    if (i % 5 === 0) {\r\n      console.log(temp);\r\n      temp = \"\";\r\n    }\r\n    temp += KeyState[keys[i]].substr(0, 3) + \"\\t\";\r\n  }\r\n  console.log(temp);\r\n};\r\n\r\n// const printCommonSpies = (a: KeyState[], b: KeyState[]) => {\r\n//   let count = 0;\r\n//   a.forEach((key) => {\r\n//     if (key === KeyState.SPY) count++;\r\n//   });\r\n//   b.forEach((key, index) => {\r\n//     if (key === KeyState.SPY && a[index] !== KeyState.SPY) {\r\n//       count++;\r\n//     }\r\n//   });\r\n//   console.log(count);\r\n// };\r\n\r\n// const printOverlappingSpies = (a: KeyState[], b: KeyState[]) => {\r\n//   let count = 0;\r\n//   a.forEach((key, index) => {\r\n//     if (key === KeyState.SPY && b[index] === KeyState.SPY) count++;\r\n//   });\r\n//   console.log(count);\r\n// };\r\n","export enum CardState {\r\n  default = \"default\",\r\n  guessedGreen = \"guessed spy green\",\r\n  guessedRed = \"guessed spy red\",\r\n  guessedBlue = \"guessed spy blue\",\r\n  guessedBystander = \"guessed bystander\",\r\n  guessedAssasin = \"guessed assasin\",\r\n  bystanderNorth = \"bystander north\",\r\n  bystanderSouth = \"bystander south\",\r\n  bystanderBoth = \"bystander both\",\r\n}\r\n\r\nexport interface Card {\r\n  word: string;\r\n  state: CardState;\r\n}\r\n\r\nfunction shuffle(a: any[]) {\r\n  var j, x, i;\r\n  for (i = a.length - 1; i > 0; i--) {\r\n    j = Math.floor(Math.random() * (i + 1));\r\n    x = a[i];\r\n    a[i] = a[j];\r\n    a[j] = x;\r\n  }\r\n  return a;\r\n}\r\n\r\nexport const createCards = (\r\n  language: string,\r\n  words: string[],\r\n  data: string\r\n): Card[] => {\r\n  let selectedWords: any[];\r\n  if (data) {\r\n    selectedWords = JSON.parse(atob(data));\r\n  } else {\r\n    selectedWords = words;\r\n  }\r\n  console.log(selectedWords)\r\n  if (selectedWords.length < 25) {alert(\"Less than 25 cards!!!\"); return []}\r\n  const shuffledWords = shuffle(selectedWords);\r\n  console.log(shuffledWords)\r\n  const cards = new Array(25).fill({}).map((card, index) => ({\r\n    word: shuffledWords[index][language],\r\n    state: CardState.default,\r\n  }));\r\n  return cards;\r\n};\r\n\r\nexport const getNextCardState = {\r\n  standard: (currentState: CardState) => {\r\n    switch (currentState) {\r\n      case CardState.default:\r\n        return CardState.guessedBlue;\r\n\r\n      case CardState.guessedBlue:\r\n        return CardState.guessedRed;\r\n\r\n      case CardState.guessedRed:\r\n        return CardState.guessedBystander;\r\n\r\n      case CardState.guessedBystander:\r\n        return CardState.default;\r\n\r\n      default:\r\n        return CardState.default;\r\n    }\r\n  },\r\n  duet: (currentState: CardState) => {\r\n    switch (currentState) {\r\n      case CardState.default:\r\n        return CardState.guessedGreen;\r\n\r\n      case CardState.guessedGreen:\r\n        return CardState.bystanderNorth;\r\n\r\n      case CardState.bystanderNorth:\r\n        return CardState.bystanderSouth;\r\n\r\n      case CardState.bystanderSouth:\r\n        return CardState.bystanderBoth;\r\n\r\n      case CardState.bystanderBoth:\r\n        return CardState.default;\r\n\r\n      default:\r\n        return CardState.default;\r\n    }\r\n  },\r\n};\r\n","export const sand = \"#ede1c7\";\r\nexport const green_dark = \"#e0dd56\";\r\nexport const green_med = \"#048403\";\r\nexport const green_light = \"#004119\";\r\nexport const green_gradient = `radial-gradient(${green_dark}, ${green_med}, ${green_light})`;\r\nexport const red = \"#DE3E19\";\r\nexport const blue = \"#4C7DA7\";\r\nexport const black = \"#666\";\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useCustomWordList = () => {\r\n    const [data, setData] = useState<any>({})\r\n    const fetchAndSetCustomWordList = async () => {\r\n      try {\r\n        const request = await fetch(\"https://gist.githubusercontent.com/nicolaigram/79921861e1665cc60fef6409677b6990/raw/codenames_wordlist.txt\")\r\n        const response = await request.text()\r\n        const customWordListData: any = {}\r\n        let currentIndex: string = \"\"\r\n        response.split(\"\\n\").forEach((line: string) => {\r\n          if (line.includes(\"-- \")) {\r\n            const index = line.split(\" \")[1]\r\n            customWordListData[index] = []\r\n            currentIndex = index\r\n          } else if (currentIndex.length > 0) {\r\n            customWordListData[currentIndex].push({\"da\": line})\r\n          }\r\n        })\r\n        setData(customWordListData)\r\n      } catch (error) {\r\n        console.error(\"Something went wrong\")\r\n        console.log(error)\r\n      }\r\n    }\r\n  \r\n    useEffect(() => {\r\n      fetchAndSetCustomWordList()\r\n    },[])\r\n\r\n    return data\r\n  }","import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nexport default function Timer() {\r\n  const startTime = 60;\r\n  const [timeLeft, setTimeLeft] = useState(startTime);\r\n  const [isActive, setIsActive] = useState(false);\r\n  // const sounds = {\r\n  //   tick: new Audio(process.env.PUBLIC_URL + \"/codenames/alarm-press.mp3\"),\r\n  //   alarm: new Audio(process.env.PUBLIC_URL + \"/codenames/alarm-bell.mp3\"),\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      setTimeout(() => {\r\n        if (timeLeft < 1) {\r\n          //   sounds.alarm.play();\r\n          setIsActive(false);\r\n        } else {\r\n          setTimeLeft((timeLeft) => timeLeft - 1);\r\n          //   sounds.tick.play();\r\n        }\r\n      }, 1000);\r\n    } else {\r\n      setTimeLeft(startTime);\r\n    }\r\n  }, [timeLeft, isActive]);\r\n\r\n  const toggleTimer = () => {\r\n    setIsActive((isActive) => !isActive);\r\n  };\r\n\r\n  return (\r\n    <TimerStyled\r\n      whileTap={{ scale: 1.1 }}\r\n      onClick={toggleTimer}\r\n      percentage={(timeLeft / startTime) * 100}\r\n    >\r\n      <div className=\"timeLeft\">{timeLeft}</div>\r\n      <div className=\"timer\"></div>\r\n    </TimerStyled>\r\n  );\r\n}\r\n\r\nconst TimerStyled: any = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  width: 100px;\r\n  height: 100%;\r\n  border: 1px solid black;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  margin-right: 20px;\r\n  .timeLeft {\r\n    margin: 0 auto;\r\n    z-index: 99;\r\n    font-size: 30px;\r\n    transform: rotateZ(-90deg);\r\n  }\r\n  .timer {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: ${(props: any) => props.percentage + \"%\"};\r\n    background: ${(props: any) => {\r\n      const p = props.percentage;\r\n      if (p < 25) {\r\n        return \"rgba(150,0,0,0.8)\";\r\n      } else if (p < 50) {\r\n        return \"rgba(150,150,0,0.8)\";\r\n      } else {\r\n        return \"rgba(0,150,0,0.8)\";\r\n      }\r\n    }};\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"../../ForSale/components/Button\";\r\nimport { getKeys, KeyState } from \"../KeyCard/util/keys\";\r\nimport { Card, CardState, createCards, getNextCardState } from \"../util/cards\";\r\nimport { blue, green_gradient, red, sand, black } from \"../util/colors\";\r\nimport { useCustomWordList } from \"../util/useCustomWordList\";\r\nimport Timer from \"./Timer\";\r\n\r\nexport default function Codenames() {\r\n  const { language, version, cardset, data } = useParams<{\r\n    language: string;\r\n    version: \"standard\" | \"duet\";\r\n    cardset: string;\r\n    data: string;\r\n  }>();\r\n\r\n  const [cards, setCards] = useState<Card[]>([]);\r\n  const [turn, setTurn] = useState(9);\r\n  const [gameId] = useState(\"\");\r\n  const [keys, setKeys] = useState<KeyState[]>([]);\r\n  const [QRContent, setQRContent] = useState<string>(\"\")\r\n  const customWordList: any = useCustomWordList()\r\n\r\n  const keyToCardMapping: any = {\r\n    [KeyState.RED]: CardState.guessedRed,\r\n    [KeyState.BLUE]: CardState.guessedBlue,\r\n    [KeyState.BYSTANDER]: CardState.guessedBystander,\r\n    [KeyState.ASSASSIN]: CardState.guessedAssasin\r\n  }\r\n\r\n  const resetGame = (e: any) => {\r\n    if (e) e.preventDefault();\r\n    const [generatedKeys, encoded_url] = getKeys(gameId, version);\r\n    if (!generatedKeys) return;\r\n    setKeys(generatedKeys);\r\n    setQRContent(encoded_url)\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetGame(null)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const words: any = {\r\n      default: require(\"../util//data/default.json\"),\r\n      deep: require(\"../util/data/deep.json\"),\r\n      ...customWordList,\r\n    }\r\n    if (!(cardset in words)) return\r\n    const allCards: string[] = words[cardset]\r\n    const tempCards: any = createCards(language, allCards, data)\r\n    setCards(tempCards)\r\n  }, [customWordList])\r\n\r\n  const toggleCardState = (index: number) => {\r\n    const temp = [...cards];\r\n    temp[index].state === CardState.default ? temp[index].state = keyToCardMapping[keys[index]] : temp[index].state = CardState.default\r\n    setCards(temp);\r\n  };\r\n\r\n  const isGuessed = (card: Card) => {\r\n    if (card.state === CardState.guessedGreen) return true;\r\n    // if (card.state === CardState.guessedSouth) return true;\r\n    return false;\r\n  };\r\n\r\n  const whoGuesFirst = () => {\r\n    let redCount = 0\r\n    let blueCount = 0\r\n    keys.forEach((key: any) => {\r\n      if (key === KeyState.RED) redCount++\r\n      if (key === KeyState.BLUE) blueCount++\r\n    })\r\n    if (blueCount > redCount) {\r\n      return \"Red\"\r\n    } else {\r\n      return \"Blue\"\r\n    }\r\n  }\r\n\r\n  if (QRContent) return <StyledPage>\r\n    <div className=\"start-screen\">\r\n      <h1>{whoGuesFirst()} goes first!</h1>\r\n      <h2>Scan the QR code with your phone</h2>\r\n      <QRCode value={QRContent} />\r\n      <Button onClick={() => setQRContent(\"\")} >Start</Button>\r\n    </div>\r\n  </StyledPage>\r\n\r\n  return (\r\n    <StyledPage>\r\n      <div className=\"container\">\r\n        {version === \"standard\" && <Timer />}\r\n        {version === \"duet\" && (\r\n          <div className=\"turn-counter\">\r\n            <div className=\"buttons\">\r\n              <Button onClick={() => setTurn(turn + 1)}>\r\n                <span>↑</span>\r\n              </Button>\r\n              <Button onClick={() => setTurn(turn - 1)}>\r\n                <span>↓</span>\r\n              </Button>\r\n            </div>\r\n            <span>Turns left: {turn}</span>\r\n          </div>\r\n        )}\r\n        <div className=\"board\">\r\n          {cards.map((card, index) => (\r\n            <motion.div\r\n              whileTap={{ scale: 1.1 }}\r\n              className={\"word \" + card.state}\r\n              onClick={() => toggleCardState(index)}\r\n            >\r\n              {!isGuessed(card) && (\r\n                <>\r\n                  <span className=\"player-north\">{card.word}</span>\r\n                  <span className=\"player-south\">{card.word}</span>\r\n                </>\r\n              )}\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  background: url(${process.env.PUBLIC_URL}/codenames/wooden-table-bg.jpg);\r\n  background-position: center;\r\n  background-size: cover;\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 600px;\r\n    @media screen and (max-height: 600px) {\r\n      height: 90vh;\r\n    }\r\n  }\r\n  .start-screen {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .start-screen h1,\r\n  .start-screen h2 {\r\n    color: white;\r\n    text-shadow: 1px 1px 3px #333;\r\n  }\r\n  .start-screen button {\r\n    padding: 20px;\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n  }\r\n  .turn-counter {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    transform: rotateZ(-90deg);\r\n    background: rgba(255, 255, 255, 0.3);\r\n    padding: 8px;\r\n    width: 200px;\r\n    span {\r\n      font-size: 30px;\r\n      text-align: center;\r\n    }\r\n    .buttons {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 10px;\r\n      button {\r\n        height: 80px;\r\n        width: 80px;\r\n        border-radius: 8px;\r\n        border: 0;\r\n        background: #111;\r\n        color: white;\r\n        font-size: 30px;\r\n      }\r\n    }\r\n  }\r\n  .board {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 800px;\r\n    height: 100%;\r\n    .word {\r\n      height: 110px;\r\n      @media screen and (max-height: 600px) {\r\n        font-size: 16px;\r\n      }\r\n      font-weight: 400;\r\n      position: relative;\r\n      background: linear-gradient(${sand} 50%, #fff 50%);\r\n      border: 1px solid black;\r\n      border-radius: 8px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n      flex: 1 0 16%;\r\n      margin: 5px;\r\n      user-select: none;\r\n      overflow: hidden;\r\n      span {\r\n        font-size: 18px;\r\n        font-weight: 400;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        &.player-north {\r\n          transform: rotateZ(180deg);\r\n          font-style: italic;\r\n          color: rgba(0, 0, 0, 0.5);\r\n        }\r\n      }\r\n      &.guessed {\r\n        span {\r\n          display: none;\r\n        }\r\n        &.spy::before {\r\n          background: center url(${process.env.PUBLIC_URL}/codenames/spy.png);\r\n          background-size: contain;\r\n        }\r\n        &.assasin::before {\r\n          background: center url(${process.env.PUBLIC_URL}/codenames/spy.png);\r\n          background-size: contain;\r\n        }\r\n        &.bystander::before {\r\n          background: bottom\r\n            url(${process.env.PUBLIC_URL}/codenames/bystander.png);\r\n\r\n          background-size: 45%;\r\n        }\r\n        &.spy::before,\r\n        &.assasin::before,\r\n        &.bystander::before {\r\n          opacity: 0.5;\r\n          background-repeat: no-repeat;\r\n          content: \"\";\r\n          display: block;\r\n          height: 100%;\r\n          width: 100%;\r\n        }\r\n\r\n        &.green {\r\n          background: ${green_gradient};\r\n        }\r\n        &.red {\r\n          background: ${red};\r\n        }\r\n        &.blue {\r\n          background: ${blue};\r\n        }\r\n        &.bystander {\r\n          background: ${sand};\r\n        }\r\n        &.assasin {\r\n          background: ${black};\r\n        }\r\n      }\r\n      &.north::before,\r\n      &.south::before,\r\n      &.both::before {\r\n        position: absolute;\r\n        font-size: 28px;\r\n        font-weight: 500;\r\n      }\r\n      &.north::before {\r\n        content: \"↑\";\r\n      }\r\n      &.south::before {\r\n        content: \"↓\";\r\n      }\r\n      &.both::before {\r\n        content: \"↑↓\";\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { blue, green_gradient, red, sand } from \"../util/colors\";\r\nimport { getKeys, KeyState } from \"./util/keys\";\r\n\r\nexport default function KeyCard() {\r\n  const { version, preset } = useParams<any>();\r\n  const [keys, setKeys] = useState<KeyState[]>([]);\r\n  const [gameId] = useState(\"\");\r\n  const [urlForFriend, setUrlForFriend] = useState(\"\");\r\n  const [hideUrl, setHideUrl] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (preset) {\r\n      let data = JSON.parse(atob(preset));\r\n      setKeys(data);\r\n    }\r\n  }, [preset]);\r\n\r\n  const resetGame = (e: any) => {\r\n    e.preventDefault();\r\n    const [generatedKeys, url] = getKeys(gameId, version);\r\n    if (!generatedKeys) return;\r\n    if (url) setUrlForFriend(url);\r\n    setKeys(generatedKeys);\r\n    setHideUrl(false);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    copy(urlForFriend);\r\n    setHideUrl(true);\r\n  };\r\n\r\n  return (\r\n    <StyledPage>\r\n      {!hideUrl && urlForFriend && (\r\n        <div\r\n          className=\"url-share\"\r\n          style={{ width: \"100%\", wordBreak: \"break-all\" }}\r\n        >\r\n          <span>{urlForFriend}</span>\r\n          <button onClick={handleCopy}>Copy</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"is-started\">\r\n        <button id=\"newGame\" onClick={resetGame}>\r\n          Nyt spil\r\n        </button>\r\n        <div className=\"keys\">\r\n          {keys.map((key) => (\r\n            <div className={\"key \" + key} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  padding: 20px;\r\n  background: url(${process.env.PUBLIC_URL}/codenames/wooden-table-bg.jpg);\r\n\r\n  button {\r\n    background: white;\r\n    border: 0;\r\n    border: 1px solid black;\r\n    padding: 12px;\r\n  }\r\n\r\n  .url-share {\r\n    margin-bottom: 20px;\r\n    span {\r\n      display: block;\r\n      background: white;\r\n    }\r\n    button {\r\n      height: 50px;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  button#newGame {\r\n    margin-bottom: 20px;\r\n  }\r\n  form {\r\n    input {\r\n      margin-bottom: 20px;\r\n      height: 40px;\r\n    }\r\n  }\r\n  .keys {\r\n    @media all and (orientation: landscape) {\r\n      width: 90vh;\r\n      height: 70vh;\r\n    }\r\n    @media all and (orientation: portrait) {\r\n      width: 90vw;\r\n      height: 70vw;\r\n    }\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    .key {\r\n      flex: 1 0 18%;\r\n      border: 1px solid black;\r\n      margin: 0.5%;\r\n      border-radius: 8px;\r\n      &.BYSTANDER {\r\n        background: ${sand};\r\n      }\r\n      &.ASSASSIN {\r\n        background: black;\r\n      }\r\n      &.SPY {\r\n        background: ${green_gradient};\r\n      }\r\n      &.RED {\r\n        background: ${red};\r\n      }\r\n      &.BLUE {\r\n        background: ${blue};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ExternalData({ language, version }: any) {\r\n  const history = useHistory();\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const getWords = async (url: string) => {\r\n    try {\r\n      const result = await fetch(url + text);\r\n      const words = await result.json();\r\n      const formattedWords = words.map((word: any) => ({ en: word.word }));\r\n      if (words.length < 25) {\r\n        alert(`Only found ${words.length} words. Need at least 25.`);\r\n        console.log(words);\r\n        throw new Error(`Only found ${words.length} words. Need 25.`);\r\n      }\r\n      history.push(\r\n        `/codenames/game/${version}/${language}/_/${btoa(\r\n          JSON.stringify(formattedWords)\r\n        )}`\r\n      );\r\n    } catch (error) {\r\n      alert(\"Something wrong in external service\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {language === \"en\" && (\r\n        <>\r\n          <motion.div\r\n            className=\"option\"\r\n            onClick={() => getWords(\"https://api.datamuse.com/words?rel_rhy=\")}\r\n          >\r\n            Words that rhyme with:\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"option\"\r\n            onClick={() => getWords(\"https://api.datamuse.com/words?rel_trg=\")}\r\n          >\r\n            Words associated with:\r\n          </motion.div>\r\n          <input\r\n            style={{ height: \"40px\" }}\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExternalData from \"./ExternalData\";\r\nimport { red } from \"./util/colors\";\r\nimport { useCustomWordList } from \"./util/useCustomWordList\";\r\n\r\nexport default function Codenames() {\r\n  const [language, setLanguage] = useState(\"da\");\r\n  const [version, setVersion] = useState(\"standard\");\r\n  const customWordLists = useCustomWordList()\r\n\r\n  return (\r\n    <StyledPage>\r\n      <h1>Settings</h1>\r\n      <div className=\"columns\">\r\n        <div className=\"col options\">\r\n          <h2>Language</h2>\r\n          <motion.div\r\n            whileTap={{ scale: 1.1 }}\r\n            className={\"option\" + (language === \"da\" ? \" active\" : \"\")}\r\n            onClick={() => setLanguage(\"da\")}\r\n          >\r\n            Danish\r\n          </motion.div>\r\n          <motion.div\r\n            whileTap={{ scale: 1.1 }}\r\n            className={\"option\" + (language === \"en\" ? \" active\" : \"\")}\r\n            onClick={() => setLanguage(\"en\")}\r\n          >\r\n            English\r\n          </motion.div>\r\n        </div>\r\n        <div className=\"col options\">\r\n          <h2>Version</h2>\r\n          <motion.div\r\n            whileTap={{ scale: 1.1 }}\r\n            className={\"option\" + (version === \"standard\" ? \" active\" : \"\")}\r\n            onClick={() => setVersion(\"standard\")}\r\n          >\r\n            Standard\r\n          </motion.div>\r\n          <motion.div\r\n            whileTap={{ scale: 1.1 }}\r\n            className={\"option\" + (version === \"duet\" ? \" active\" : \"\")}\r\n            onClick={() => setVersion(\"duet\")}\r\n          >\r\n            Duet\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n      <h1>Game</h1>\r\n      <div className=\"columns\">\r\n        <div className=\"col\">\r\n          <h2>Tools</h2>\r\n          <Link to={`/codenames/keycard/${version}`}>KeyCard</Link>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h2>Board</h2>\r\n          <Link to={`/codenames/game/${version}/${language}/default`}>\r\n            Standard\r\n          </Link>\r\n          <Link to={`/codenames/game/${version}/${language}/deep`}>\r\n            Deep Undercover\r\n          </Link>\r\n          {language === \"da\" && (\r\n            Object.keys(customWordLists).filter((key: any) => customWordLists[key].length >= 25).map((key: any) => (\r\n              <Link to={`/codenames/game/${version}/${language}/${key}`}>\r\n                {key}\r\n              </Link>\r\n            ))\r\n          )}\r\n          <ExternalData language={language} version={version} />\r\n        </div>\r\n      </div>\r\n    </StyledPage>\r\n  );\r\n}\r\n\r\nconst StyledPage = styled.div`\r\n  padding: 40px 0 80px;\r\n  background: center url(${process.env.PUBLIC_URL}/codenames/bg.jpeg);\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  min-height: 100vh;\r\n  h1 {\r\n    font-size: 50px;\r\n    margin: 10px;\r\n    text-align: center;\r\n    color: white;\r\n    -webkit-text-stroke: 1px black;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    width: 100%;\r\n    padding-right: 16px;\r\n    padding-left: 16px;\r\n  }\r\n  .columns {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    background: rgba(0, 0, 0, 0.75);\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n    input {\r\n      margin-bottom: 20px;\r\n    }\r\n    &:last-of-type {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n  .col {\r\n    padding: 0 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    font-weight: 300;\r\n    h2 {\r\n      text-align: center;\r\n      color: white;\r\n      font-weight: 400;\r\n    }\r\n    a,\r\n    .option {\r\n      background: radial-gradient(rgb(25, 25, 25), rgb(0, 0, 0));\r\n      border-radius: 8px;\r\n      margin-bottom: 20px;\r\n      color: white;\r\n      text-decoration: none;\r\n      font-size: 20px;\r\n      padding: 30px;\r\n      text-align: center;\r\n      user-select: none;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .options {\r\n    padding-right: 20px;\r\n    .option {\r\n      &.active {\r\n        color: ${red};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Codenames from \"./Game\";\r\nimport KeyCard from \"./KeyCard\";\r\nimport Home from \".\";\r\n\r\nexport default function CodenamesRouter() {\r\n  return (\r\n    <>\r\n      <Route path={\"/codenames/keycard/:version/:preset?\"}>\r\n        <KeyCard />\r\n      </Route>\r\n      <Route path={\"/codenames/game/:version/:language/:cardset/:data?\"}>\r\n        <Codenames />\r\n      </Route>\r\n      <Route exact path={\"/codenames\"}>\r\n        <Home />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [heroImg, setHeroImg] = useState<any>(null);\r\n  const [cardImg, setCardImg] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", keyDownHandler);\r\n    return () => window.removeEventListener(\"keydown\", keyDownHandler);\r\n  }, []);\r\n\r\n  const keyDownHandler = (e: any) => {\r\n    const rKey = 82;\r\n    const spaceKey = 32;\r\n    console.log(e.keyCode);\r\n    if (e.keyCode === spaceKey) handleClickRandomCard();\r\n    if (e.keyCode === rKey) handleClickRandomHero();\r\n  };\r\n\r\n  const handleClickRandomHero = () => {\r\n    const randomHeroImg = getRandomHero();\r\n    setHeroImg(randomHeroImg);\r\n  };\r\n\r\n  const handleClickRandomCard = () => {\r\n    const randomCardImg = getRandomCard();\r\n    setCardImg(randomCardImg);\r\n  };\r\n\r\n  return (\r\n    <div style={{ minHeight: \"100vh\", backgroundColor: \"#c2b280\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          width: \"15%\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      >\r\n        {heroImg && <img src={heroImg} alt=\"hero\" />}\r\n        <button onClick={handleClickRandomHero}>Random Hero (R)</button>\r\n        {cardImg && <img src={cardImg} alt=\"card\" />}\r\n        <button onClick={handleClickRandomCard}>Random Card (Space)</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getRandomHero = () => {\r\n  const numberOfHeroes = 5;\r\n  const randomIndex = Math.floor(Math.random() * numberOfHeroes + 1);\r\n  return `${process.env.PUBLIC_URL}/7wonders/heroes/${randomIndex}.png`;\r\n};\r\n\r\nconst getRandomCard = () => {\r\n  const numberOfCards = 12;\r\n  const randomIndex = Math.floor(Math.random() * numberOfCards + 1);\r\n  return `${process.env.PUBLIC_URL}/7wonders/cards/${randomIndex}.jpg`;\r\n};\r\n\r\nfunction importAll(r: any) {\r\n  return r.keys().map(r);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport KingOfNewYork from \"./pages/KingOfNewYork\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport StarRealms from \"./pages/StarRealms\";\r\nimport Munchkin from \"./pages/Munchkin\";\r\nimport ForSale from \"./pages/ForSale\";\r\nimport CodenamesRouter from \"./pages/Codenames/router\";\r\nimport SevenWondersDuelAi from \"./pages/SevenWondersDuelAi/\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <CodenamesRouter />\r\n      <Route path={\"/for-sale\"}>\r\n        <ForSale />\r\n      </Route>\r\n      <Route path={\"/munchkin\"}>\r\n        <Munchkin />\r\n      </Route>\r\n      <Route path={\"/star-realms\"}>\r\n        <StarRealms />\r\n      </Route>\r\n      <Route path={\"/king-of-new-york\"}>\r\n        <KingOfNewYork />\r\n      </Route>\r\n      <Route path={\"/7wonders-duel-ai\"}>\r\n        <SevenWondersDuelAi />\r\n      </Route>\r\n      <Route exact path={\"/\"}>\r\n        <Home />\r\n      </Route>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}